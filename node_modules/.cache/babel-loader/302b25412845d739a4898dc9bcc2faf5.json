{"ast":null,"code":"var _jsxFileName = \"/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/GerePret/formulaireGerePret.js\";\n\n/* eslint-disable react/button-has-type */\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { Redirect } from 'react-router';\nimport './formulaireGerePret.css';\nimport { MDBContainer, MDBRow, MDBCard, MDBCardBody } from 'mdbreact';\nimport axios from 'axios';\n\nclass LendBook extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.change = async e => {\n      await this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmitLend = e => {\n      const {\n        title,\n        author,\n        borrower,\n        borrowDate\n      } = this.state; //cas ou tous les champs sont remplis\n\n      if (title && author && borrower && borrowDate) {\n        console.log(this.state);\n        let formData = new FormData();\n        formData.append(\"title\", this.state.title);\n        formData.append(\"author\", this.state.author);\n        formData.append(\"borrower\", this.state.borrower);\n        formData.append(\"borrowDate\", this.state.borrowDate);\n        const url = \"http://localhost:8888/API/AjouterPret/ajout_pret.php\";\n        axios.post(url, formData, {\n          withCredentials: true\n        }) //succès enregistrer prêt\n        .then(function (response) {\n          this.setState({\n            registeredLend: true\n          });\n          console.log(response);\n          alert('Prêt enregistré');\n        }.bind(this)) //echec enregistrer prêt \n        .catch(error => {\n          if (error.response && error.response.status === 403) {\n            console.log(error);\n            alert(error.response.data);\n          }\n        });\n      } else {\n        //cas ou les champs ne sont pas remplis\n        this.setState({\n          error: 'Veuillez saisir tous les champs !'\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          error: ''\n        });\n      }, 2000);\n      e.preventDefault();\n    };\n\n    this.state = {\n      noSession: false,\n      //booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      title: null,\n      //va contenir la valeur entrée pour le champs \"titre\" du formulaire\n      author: null,\n      //va contenir la valeur entrée pour le champs \"auteur\" du formulaire\n      borrower: null,\n      //va contenir la valeur entrée pour le champs \"emprunteur\" du formulaire\n      borrowDate: null,\n      //va contenir la valeur entrée pour le champs \"date d'emprunt\" du formulaire\n      registeredLend: false,\n      //initialise le statut de redirection comme faux\n      error: '' //va contenir l'erreur en cas d'erreur\n\n    };\n    this.checkSession = this.checkSession.bind(this);\n  } //Vérifie que la session est active\n\n\n  checkSession() {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {\n      withCredentials: true\n    }).then(function (response) {\n      console.log(response);\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        this.setState({\n          noSession: true\n        }); //s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n\n        console.log(error);\n      }\n    });\n  } //methode qui permet d'attribuer à \"title\", \"author\", \"borrower\" et \"borrowDate\" les valeurs entrées au clavier par l'utilisateur\n\n\n  render() {\n    const {\n      error\n    } = this.state;\n    const container = {\n      height: 800\n    };\n    const {\n      registeredLend\n    } = this.state;\n    const {\n      noSession\n    } = this.state; //appel à la methode qui verifie la session\n\n    this.checkSession(); //s'il n'y a pas de session active, redirection vers la page de connexion\n\n    if (noSession) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    } //redirection vers la page des prêts si le prêt a été enregistré correctement\n\n\n    if (registeredLend) {\n      return React.createElement(Redirect, {\n        to: \"/mesPrets\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    } //affichage du formulaire de prêt a completer par l'utilisateur\n    //affichage du bouton \"valider\" en fin de formulaire\n\n\n    return React.createElement(MDBContainer, {\n      style: container,\n      className: \"containerGerePret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"colGerePret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmitLend,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"dark-grey-text mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Ajouter un pr\\xEAt\")), React.createElement(\"div\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Titre\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      placeholder: \"Titre\",\n      className: \"form-control\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"author\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Auteur\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"author\",\n      placeholder: \"Auteur\",\n      className: \"form-control\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"borrower\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Emprunteur\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"borrower\",\n      placeholder: \"Nom de l'emprunteur\",\n      className: \"form-control\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"borrowDate\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Date d'emprunt\"), React.createElement(\"input\", {\n      type: \"date\",\n      id: \"borrowDate\",\n      placeholder: \"jj/mm/aa\",\n      className: \"form-control\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-center py-4 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleSubmitLend,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Valider\"), error && React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, error))))))));\n  }\n\n}\n\nexport default LendBook;","map":{"version":3,"sources":["/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/GerePret/formulaireGerePret.js"],"names":["React","Redirect","MDBContainer","MDBRow","MDBCard","MDBCardBody","axios","LendBook","Component","constructor","props","change","e","setState","target","id","value","handleSubmitLend","title","author","borrower","borrowDate","state","console","log","formData","FormData","append","url","post","withCredentials","then","response","registeredLend","alert","bind","catch","error","status","data","setTimeout","preventDefault","noSession","checkSession","get","render","container","height"],"mappings":"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","sourcesContent":["/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { Redirect} from 'react-router';\nimport './formulaireGerePret.css';\nimport {\n  MDBContainer, MDBRow, MDBCard, MDBCardBody,\n} from 'mdbreact';\nimport axios from 'axios';\n\n\nclass LendBook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      title: null,//va contenir la valeur entrée pour le champs \"titre\" du formulaire\n      author: null,//va contenir la valeur entrée pour le champs \"auteur\" du formulaire\n      borrower: null,//va contenir la valeur entrée pour le champs \"emprunteur\" du formulaire\n      borrowDate: null,//va contenir la valeur entrée pour le champs \"date d'emprunt\" du formulaire\n      registeredLend: false,//initialise le statut de redirection comme faux\n      error: '',//va contenir l'erreur en cas d'erreur\n\n    }\n    this.checkSession = this.checkSession.bind(this);\n  }\n\n  //Vérifie que la session est active\n  checkSession () {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n    .then(function(response){\n      console.log(response);\n    })\n\n    .catch((error) => {\n      if(error.response && error.response.status=== 404){\n        this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n        console.log(error);\n      }\n    });\n  }\n\n  //methode qui permet d'attribuer à \"title\", \"author\", \"borrower\" et \"borrowDate\" les valeurs entrées au clavier par l'utilisateur\n  change = async e => {\n    await this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  //methode qui permet d'envoyer les données au fichier PHP \"ajout_pret.php\" afin d'enregistrer le prêt, lorque l'utilisateur appuie sur le bouton \"valider\"\n  handleSubmitLend = e => {\n\n    const {\n      title, author, borrower, borrowDate,\n    } = this.state;\n    //cas ou tous les champs sont remplis\n    if (title && author && borrower && borrowDate) {\n\n        \n        console.log(this.state);\n        let formData = new FormData();\n        formData.append(\"title\",this.state.title);\n        formData.append(\"author\",this.state.author);\n        formData.append(\"borrower\",this.state.borrower);\n        formData.append(\"borrowDate\",this.state.borrowDate);\n        const url = \"http://localhost:8888/API/AjouterPret/ajout_pret.php\";\n        axios.post(url,formData, {withCredentials: true})\n\n        //succès enregistrer prêt\n        .then(function(response){\n          this.setState({registeredLend:true});\n          console.log(response);\n          alert('Prêt enregistré');\n        }.bind(this))\n\n        //echec enregistrer prêt \n        .catch((error) => {\n          if (error.response && error.response.status === 403){\n            console.log(error);\n            alert(error.response.data);\n          }\n        });\n\n        \n    } else {\n      //cas ou les champs ne sont pas remplis\n      this.setState({\n        error: 'Veuillez saisir tous les champs !',\n      });\n    }\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n  render() {\n    const { error } = this.state;\n    const container = {height: 800};\n    const {registeredLend} = this.state;\n    const {noSession} = this.state;\n\n    //appel à la methode qui verifie la session\n    this.checkSession ();\n\n    //s'il n'y a pas de session active, redirection vers la page de connexion\n    if(noSession){\n      return <Redirect to=\"/\"/>;\n    }\n\n    //redirection vers la page des prêts si le prêt a été enregistré correctement\n    if(registeredLend){\n      return <Redirect to=\"/mesPrets\"/>;\n    }\n\n    //affichage du formulaire de prêt a completer par l'utilisateur\n    //affichage du bouton \"valider\" en fin de formulaire\n    return (\n      <MDBContainer style={container} className=\"containerGerePret\">\n        <MDBRow>\n          <div className=\"colGerePret\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={this.handleSubmitLend} className=\"form\">\n                  <div className=\"text-center\">\n                    <h2 className=\"dark-grey-text mb-5\">\n                      Ajouter un prêt\n                    </h2>\n                  </div>\n                  <div className=\"grey-text\">\n                    <label htmlFor=\"title\" className=\"grey-text\">\n                      Titre\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"title\"\n                      placeholder=\"Titre\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"author\" className=\"grey-text\">\n                      Auteur\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"author\"\n                      placeholder=\"Auteur\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"borrower\" className=\"grey-text\">\n                      Emprunteur\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"borrower\"\n                      placeholder=\"Nom de l'emprunteur\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"borrowDate\" className=\"grey-text\">\n                      Date d&apos;emprunt\n                    </label>\n                    <input\n                      type=\"date\"\n                      id=\"borrowDate\"\n                      placeholder=\"jj/mm/aa\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n\n                  </div>\n                  <div className=\"text-center py-4 mt-3\">\n                    <button className=\"btn btn-primary\" onClick={this.handleSubmitLend} type=\"submit\">Valider</button>\n                    {\n                     error && (\n                     <p className=\"error\">{error}</p>\n                     )\n                    }\n                  </div>\n\n                </form>\n\n              </MDBCardBody>\n            </MDBCard>\n          </div>\n        </MDBRow>\n      </MDBContainer>\n\n    );\n  }\n}\nexport default LendBook;\n"]},"metadata":{},"sourceType":"module"}