{"ast":null,"code":"var _jsxFileName = \"/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/Connexion/connexion.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport { MDBContainer, MDBRow, MDBCard, MDBCardBody, MDBModalFooter } from 'mdbreact';\nimport './connexion.css';\nimport axios from 'axios';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.change = async e => {\n      await this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmitLogIn = e => {\n      const {\n        email,\n        password\n      } = this.state; //cas ou tous les champs sont remplis\n\n      if (password && email) {\n        console.log(this.state);\n        let formData = new FormData();\n        formData.append(\"email\", this.state.email);\n        formData.append(\"password\", this.state.password);\n        const url = \"http://localhost:8888/API/Connexion/login.php\";\n        axios.post(url, formData, {\n          withCredentials: true\n        }) //succès connexion\n        .then(function (response) {\n          this.setState({\n            loggedIn: true\n          }); //si la connexion marche, change le statut de connexion comme vrai, redirection dans le render\n\n          console.log(\"connexion réussie - email et mot de passe valides\", response);\n        }.bind(this)) //echec connexion\n        .catch(error => {\n          if (error.response && error.response.status === 403) {\n            this.setState({\n              error: error.response.data\n            });\n          }\n\n          console.log(\"login non réussi\");\n        });\n      } else {\n        //cas ou tous les champs ne sont pas remplis\n        this.setState({\n          error: 'Veuillez saisir tous les champs !'\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          error: ''\n        });\n      }, 2000);\n      e.preventDefault();\n    };\n\n    this.state = {\n      password: null,\n      //va contenir la valeur entrée pour le champs \"mot de passe\" du formulaire\n      email: null,\n      //va contenir la valeur entrée pour le champs \"adresse mail\" du formulaire\n      loggedIn: false,\n      //initialise le statut de connexion comme faux\n      error: '' //va contenir l'erreur en cas d'erreur\n\n    };\n  } //methode qui permet d'attribuer à \"email\" et \"password\" les valeurs entrées au clavier par l'utilisateur\n\n\n  render() {\n    const {\n      error\n    } = this.state;\n    const {\n      loggedIn\n    } = this.state;\n\n    if (loggedIn) {\n      //redirection vers la page d'acceuil si la connexion est réussie\n      return React.createElement(Redirect, {\n        to: \"/accueil\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n    } //affichage du formulaire de connexion a completer par l'utilisateur\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"myBibli\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"MyBibli\"), React.createElement(MDBContainer, {\n      className: \"containerConnexion\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      className: \"mx-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmitLogIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"dark-grey-text mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Connexion\")), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Adresse mail\", React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      className: \"form-control\",\n      onChange: this.change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Mot de passe\", React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      onChange: this.change,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"font-small blue-text d-flex justify-content-end pb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.handleSubmitLogIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Se connecter\"), error && React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, error)), React.createElement(\"p\", {\n      className: \"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }))), React.createElement(MDBModalFooter, {\n      className: \"mx-5 pt-3 mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"font-small grey-text d-flex justify-content-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/inscription\",\n      className: \"blue-text ml-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"S'inscrire\")))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/Connexion/connexion.js"],"names":["React","Link","Redirect","MDBContainer","MDBRow","MDBCard","MDBCardBody","MDBModalFooter","axios","Login","Component","constructor","props","change","e","setState","target","id","value","handleSubmitLogIn","email","password","state","console","log","formData","FormData","append","url","post","withCredentials","then","response","loggedIn","bind","catch","error","status","data","setTimeout","preventDefault","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Redirect} from 'react-router';\nimport {\n  MDBContainer, MDBRow, MDBCard, MDBCardBody, MDBModalFooter,\n} from 'mdbreact';\nimport './connexion.css';\nimport axios from 'axios';\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: null,//va contenir la valeur entrée pour le champs \"mot de passe\" du formulaire\n      email: null,//va contenir la valeur entrée pour le champs \"adresse mail\" du formulaire\n      loggedIn: false, //initialise le statut de connexion comme faux\n      error: '',//va contenir l'erreur en cas d'erreur\n\n    };\n  }\n\n  //methode qui permet d'attribuer à \"email\" et \"password\" les valeurs entrées au clavier par l'utilisateur\n  change = async e => {\n    await this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  //methode qui permet d'envoyer les données au fichier PHP \"login.php\" afin de verifier l'identification de l'utilisateur, lorque celui-ci appuie sur le bouton \"valider\"\n  handleSubmitLogIn = e => {\n    const { email, password } = this.state;\n\n    //cas ou tous les champs sont remplis\n    if (password && email) {\n      \n      console.log(this.state);\n      let formData = new FormData();\n      formData.append(\"email\",this.state.email);\n      formData.append(\"password\",this.state.password);\n      const url = \"http://localhost:8888/API/Connexion/login.php\";\n      axios.post(url, formData, {withCredentials: true})\n\n      //succès connexion\n      .then(function(response) {  \n        this.setState({loggedIn: true});//si la connexion marche, change le statut de connexion comme vrai, redirection dans le render\n        console.log(\"connexion réussie - email et mot de passe valides\", response);\n      }.bind(this))\n\n      //echec connexion\n      .catch((error) => {\n        if(error.response && error.response.status === 403){\n          this.setState({\n            error: error.response.data,\n            });\n        }\n        console.log(\"login non réussi\");\n\n      });\n\n\n    } else {\n      //cas ou tous les champs ne sont pas remplis\n      this.setState({\n        error: 'Veuillez saisir tous les champs !',\n      });\n    }\n\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n        \n    e.preventDefault();\n\n   \n    \n  }\n\n  render() {\n    const { error } = this.state;\n    const {loggedIn } = this.state;\n\n    if(loggedIn){\n      //redirection vers la page d'acceuil si la connexion est réussie\n      return <Redirect to=\"/accueil\"/>;\n    }\n  \n    //affichage du formulaire de connexion a completer par l'utilisateur\n    return (\n      <div>\n        <h1 className=\"myBibli\">MyBibli</h1>\n        <MDBContainer className=\"containerConnexion\">\n          <MDBRow>\n            <MDBCard>\n              <MDBCardBody className=\"mx-4\">\n                <form onSubmit={this.handleSubmitLogIn}>\n                  <div className=\"text-center\">\n                    <h2 className=\"dark-grey-text mb-5\">\n                      Connexion\n                    </h2>\n                  </div>\n                  <label htmlFor=\"email\" className=\"grey-text\">\n                    Adresse mail\n                    <input\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                    />\n                  </label>\n\n                  <br />\n                  <label htmlFor=\"password\" className=\"grey-text\">\n                    Mot de passe\n                    <input\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                    />\n                  </label>\n\n                  <p className=\"font-small blue-text d-flex justify-content-end pb-3\">\n\n                  </p>\n                  <div className=\"text-center mb-3\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmitLogIn}>Se connecter</button>\n                    {\n                     error && (\n                     <p className=\"error\">{error}</p>\n                     )\n                    }\n                  </div>\n                  <p className=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\" />\n                </form>\n              </MDBCardBody>\n              <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\n                <p className=\"font-small grey-text d-flex justify-content-end\">\n                    \n                  <Link to=\"/inscription\" className=\"blue-text ml-1\">\n                    S&apos;inscrire\n                  </Link>\n                </p>\n\n\n              </MDBModalFooter>\n            </MDBCard>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}