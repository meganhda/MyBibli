{"ast":null,"code":"var _jsxFileName = \"/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/MesPrets/mesPrets.js\";\nimport React, { Fragment } from \"react\";\nimport { MDBBtn, MDBTableBody, MDBTableHead, MDBTable, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter } from \"mdbreact\";\nimport './mesPrets.css';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\n\nclass MyLends extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openModalLend = id => e => {\n      this.setState({\n        modal: true,\n        idLend: id\n      });\n    };\n\n    this.closeModalLend = () => {\n      this.setState({\n        modal: false\n      });\n    };\n\n    this.change = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.returnBook = returnDate => e => {\n      const {\n        idLend,\n        lends\n      } = this.state;\n      let newBooks = lends;\n      console.log(idLend, 'idBookSubmit');\n      this.setState({\n        modal: false\n      });\n      let formData = new FormData();\n      formData.append(\"id\", idLend);\n      formData.append(\"returnDate\", returnDate);\n      const url = \"http://localhost:8888/API/GererPrets/rendu_pret.php\";\n      axios.post(url, formData, {\n        withCredentials: true\n      }) //succes rendu livre\n      .then(function (response) {\n        console.log(response);\n        const tmp = lends;\n        newBooks = tmp.filter(livre => livre.id !== idLend);\n        alert('Succès : Livre à nouveau marqué comme disponible');\n      }) //echec rendu livre\n      .catch(error => {\n        console.log(error);\n\n        if (error.response && error.response.status === 403) {\n          console.log(error);\n          alert('Echec du rendu');\n        }\n      });\n      setTimeout(() => {\n        this.setState({\n          lends: newBooks\n        });\n      }, 500);\n      setTimeout(() => {\n        this.setState({\n          error: ''\n        });\n      }, 2000);\n      e.preventDefault();\n    };\n\n    this.state = {\n      noSession: false,\n      //booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      loading: true,\n      //booleen initialisé comme vrai, qui va changer lors de la récupération des données\n      lends: [],\n      //va contenir les prets en cours de l'utilisateur\n      returnDate: '',\n      //va contenir la valeur entrée pour le champs \"date de rendu\" du formulaire, lorsuque l'utilisateur appuie sur le bouton \"rendu\"\n      modal: false,\n      //booleen qui va permettre d'ouvrir/fermer une fenetre lorsque l'utilisateur appuie sur \"rendu\"\n      id: '',\n      //va contenir l'id du livre selectionné par l'utilisateur lorsqu'il appuiera sur le  bouton \"rendu\"\n      error: '',\n      //va contenir l'erreur en cas d'erreur\n      idLend: null //va contenir l'id du livre rendu\n\n    };\n    this.checkSession = this.checkSession.bind(this);\n    this.returnBook = this.returnBook.bind(this);\n    this.openModalLend = this.openModalLend.bind(this);\n  } //Vérifie que la session est active\n\n\n  checkSession() {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {\n      withCredentials: true\n    }).then(function (response) {\n      console.log(response);\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        this.setState({\n          noSession: true\n        }); //s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n\n        console.log(error);\n      }\n    });\n  } //methode qui permet d'ouvrir une fenetre avec un champs pour remplir la date de rendu du livre prêté\n\n\n  //methode qui permet de récuperer les livres en cours de prêts de l'utilisateur via le fichier \"liste_prets.php\"     \n  async componentDidMount() {\n    const url = \"http://localhost:8888/API/GererPrets/liste_prets.php\";\n    const response = await fetch(url, {\n      credentials: 'include'\n    });\n    const data = await response.json();\n    this.setState({\n      lends: data.results.livres,\n      loading: false\n    }); //\"lends\" contient les données reçues par le back-end \n\n    console.log(data.results.livres);\n  }\n\n  render() {\n    const {\n      noSession\n    } = this.state; //appel à la methode qui verifie la session\n\n    this.checkSession(); //s'il n'y a pas de session active, redirection vers la page de connexion\n\n    if (noSession) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    } //si le temps de récupération des données a afficher est long\n\n\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"chargement...\");\n    } //si l'utilisateur n'a pas de prêts en cours:\n    //affichage d'un bouton \"nouveau prêt\" qui redirige vers le formulaire de prêt\n    //affichage d'un bouton \"historique des prêts\" qui redirige vers l'historique des prêts\n\n\n    if (this.state.lends.length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"titleMyLends\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \" Mes pr\\xEAts \"), React.createElement(\"div\", {\n        className: \"noLend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Vous n'avez actuellement aucun pr\\xEAt en cours.\"), React.createElement(\"div\", {\n        className: \"buttonGere\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        href: \"/formulaireGerePret\",\n        color: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Nouveau pr\\xEAt\"))), React.createElement(\"div\", {\n        className: \"buttonHistoric\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(MDBBtn, {\n        href: \"/historique\",\n        color: \"dark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Historique des pr\\xEAts\"))));\n    } //sinon:\n    //affichage d'un tableau avec les prêts en cours de l'utilisateur, grâce a la fonction map qui va parcourir \"lends\"\n    //affichage d'un bouton \"rendu\" sur chaque ligne du tableau\n    //affichage d'un bouton \"nouveau prêt\" qui redirige vers le formulaire de prêt\n    //affichage d'un bouton \"historique des prêts\" qui redirige vers l'historique des prêts\n    //ouverture d'une fenetre avec le formulaire de rendu lorsque l'utilisateur appuie sur \"rendu\"\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"titleMyLends\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \" Mes pr\\xEAts \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \" Vous avez \", this.state.lends.length, \" pr\\xEAt(s) en cours:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(MDBTable, {\n      hover: true,\n      bordered: true,\n      scrollY: true,\n      maxHeight: \"350px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(MDBTableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Titre\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Auteur\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Emprunteur\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Date d'emprunt\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))), React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, this.state.lends.map(livre => React.createElement(\"tr\", {\n      key: livre.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, livre.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, livre.author), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, livre.borrower), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, livre.borrowDate), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      onClick: this.openModalLend(livre.id),\n      color: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Rendu\"), React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Date de rendu\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      name: \"returnDate\",\n      placeholder: \"jj/mm/aa\",\n      className: \"form-control\",\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"danger\",\n      onClick: this.closeModalLend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Annuler\"), React.createElement(MDBBtn, {\n      color: \"dark\",\n      onClick: this.returnBook(this.state.returnDate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Enregistrer\")))))))), React.createElement(\"div\", {\n      className: \"buttonGere\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      href: \"/formulaireGerePret\",\n      color: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Nouveau pr\\xEAt\"))), React.createElement(\"div\", {\n      className: \"buttonHistoric\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      href: \"/historique\",\n      color: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Historique des pr\\xEAts\"))));\n  }\n\n}\n\nexport default MyLends;","map":{"version":3,"sources":["/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/MesPrets/mesPrets.js"],"names":["React","Fragment","MDBBtn","MDBTableBody","MDBTableHead","MDBTable","MDBModal","MDBModalHeader","MDBModalBody","MDBModalFooter","axios","Redirect","MyLends","Component","constructor","props","openModalLend","id","e","setState","modal","idLend","closeModalLend","change","target","name","value","returnBook","returnDate","lends","state","newBooks","console","log","formData","FormData","append","url","post","withCredentials","then","response","tmp","filter","livre","alert","catch","error","status","setTimeout","preventDefault","noSession","loading","checkSession","bind","get","componentDidMount","fetch","credentials","data","json","results","livres","render","length","map","title","author","borrower","borrowDate"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { MDBBtn, MDBTableBody, MDBTableHead, MDBTable, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter} from \"mdbreact\";\nimport './mesPrets.css';\nimport axios from 'axios';\nimport { Redirect} from 'react-router';\n\nclass MyLends extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      loading: true,//booleen initialisé comme vrai, qui va changer lors de la récupération des données\n      lends: [],//va contenir les prets en cours de l'utilisateur\n      returnDate: '',//va contenir la valeur entrée pour le champs \"date de rendu\" du formulaire, lorsuque l'utilisateur appuie sur le bouton \"rendu\"\n      modal: false,//booleen qui va permettre d'ouvrir/fermer une fenetre lorsque l'utilisateur appuie sur \"rendu\"\n      id: '',//va contenir l'id du livre selectionné par l'utilisateur lorsqu'il appuiera sur le  bouton \"rendu\"\n      error:'',//va contenir l'erreur en cas d'erreur\n      idLend: null,//va contenir l'id du livre rendu\n    }\n    this.checkSession = this.checkSession.bind(this);\n    this.returnBook = this.returnBook.bind(this);\n    this.openModalLend = this.openModalLend.bind(this);\n  }\n\n  //Vérifie que la session est active\n  checkSession () {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n    .then(function(response){\n      console.log(response);\n    })\n\n    .catch((error) => {\n      if(error.response && error.response.status=== 404){\n        this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n        console.log(error);\n      }\n    });\n  }\n\n  //methode qui permet d'ouvrir une fenetre avec un champs pour remplir la date de rendu du livre prêté\n  openModalLend = (id) => e => {\n    this.setState({\n      modal: true,\n      idLend: id\n    });\n  }\n\n  //methode qui permet de fermer la fenetre de rendu d'un livre\n  closeModalLend = () => {\n  this.setState({\n    modal: false,\n  });\n}\n\n\n//methode qui permet d'attribuer à \"returnDate\" la valeur entrée au clavier par l'utilisateur lors du rendu d'un prêt\nchange = e => {\n  this.setState ({\n    [e.target.name]: e.target.value\n  });\n};\n\n//methode qui permet d'envoyer les données au fichier PHP \"rendu_pret.php\" afin de modifier le statut du livre prêté, lorque l'utilisateur appuie sur le bouton \"enregistrer\" de la fenetre de rendu\nreturnBook = (returnDate) => e => {\n\n  const { idLend, lends } = this.state;\n  let newBooks = lends;\n  console.log(idLend,'idBookSubmit');\n  this.setState({\n    modal: false,\n  })\n  let formData = new FormData();\n  formData.append(\"id\",idLend);\n  formData.append(\"returnDate\",returnDate);\n  const url = \"http://localhost:8888/API/GererPrets/rendu_pret.php\"\n  axios.post(url, formData, {withCredentials: true})\n  \n  //succes rendu livre\n  .then(function(response){\n    console.log(response);\n    const tmp = lends;\n    newBooks = tmp.filter(livre => livre.id !== idLend);\n    alert('Succès : Livre à nouveau marqué comme disponible');\n  })\n\n  //echec rendu livre\n  .catch((error)=>{\n    console.log(error)\n    if (error.response && error.response.status === 403){\n      console.log(error);\n      alert('Echec du rendu');\n    }\n  });\n\n  setTimeout(() => {\n    this.setState({\n      lends: newBooks\n    })\n  }, 500);\n  \n\n  setTimeout(() => {\n    this.setState({\n      error: '',\n    });\n  }, 2000);\n        \n  e.preventDefault();\n\n}\n\n//methode qui permet de récuperer les livres en cours de prêts de l'utilisateur via le fichier \"liste_prets.php\"     \nasync componentDidMount() {\n    const url = \"http://localhost:8888/API/GererPrets/liste_prets.php\";\n    const response = await fetch(url,{credentials: 'include'});\n    const data = await response.json();\n    this.setState({lends: data.results.livres, loading: false})//\"lends\" contient les données reçues par le back-end \n    console.log(data.results.livres);\n}\n\nrender() {\n  const {noSession} = this.state;\n\n  //appel à la methode qui verifie la session\n  this.checkSession ();\n\n  //s'il n'y a pas de session active, redirection vers la page de connexion\n  if(noSession){\n    return <Redirect to=\"/\"/>;\n  }\n\n    //si le temps de récupération des données a afficher est long\n    if(this.state.loading){\n        return <div>chargement...</div>;\n    }\n\n    //si l'utilisateur n'a pas de prêts en cours:\n    //affichage d'un bouton \"nouveau prêt\" qui redirige vers le formulaire de prêt\n    //affichage d'un bouton \"historique des prêts\" qui redirige vers l'historique des prêts\n    if (this.state.lends.length === 0){\n        return (\n          <div>\n            <h1 className=\"titleMyLends\"> Mes prêts </h1>\n            <div className=\"noLend\">\n              Vous n'avez actuellement aucun prêt en cours.\n            </div>\n            <div className=\"buttonGere\">\n                <Fragment>\n                    <MDBBtn href=\"/formulaireGerePret\" color=\"dark\"> \n                        Nouveau prêt\n                    </MDBBtn>\n                </Fragment>\n            </div>\n            <div className=\"buttonHistoric\">\n                <Fragment>\n                    <MDBBtn href=\"/historique\" color=\"dark\"> \n                        Historique des prêts\n                    </MDBBtn>\n                </Fragment>\n                \n          </div>  \n          </div>  \n        );\n    } \n\n    //sinon:\n    //affichage d'un tableau avec les prêts en cours de l'utilisateur, grâce a la fonction map qui va parcourir \"lends\"\n    //affichage d'un bouton \"rendu\" sur chaque ligne du tableau\n    //affichage d'un bouton \"nouveau prêt\" qui redirige vers le formulaire de prêt\n    //affichage d'un bouton \"historique des prêts\" qui redirige vers l'historique des prêts\n    //ouverture d'une fenetre avec le formulaire de rendu lorsque l'utilisateur appuie sur \"rendu\"\n    return (\n        <div>\n          <h1 className=\"titleMyLends\"> Mes prêts </h1>\n          <br></br>\n          <h2> Vous avez {this.state.lends.length} prêt(s) en cours:</h2>\n          <br></br>\n          <MDBTable hover bordered scrollY maxHeight=\"350px\">\n            <MDBTableHead>\n              <tr>\n              <th>Titre</th>\n              <th>Auteur</th>\n              <th>Emprunteur</th>\n              <th>Date d'emprunt</th>\n              <th></th>\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n              {\n                this.state.lends.map(livre => (\n                  <tr key={livre.id} >\n                    <td>{livre.title}</td>\n                    <td>{livre.author}</td>\n                    <td>{livre.borrower}</td>\n                    <td>{livre.borrowDate}</td>\n                    <td><MDBBtn onClick={this.openModalLend(livre.id)} color=\"dark\">Rendu</MDBBtn>\n                        <MDBModal isOpen={this.state.modal}>\n                          <MDBModalHeader>Date de rendu</MDBModalHeader>\n                          <MDBModalBody>\n                            <input\n                              type=\"date\"\n                              name=\"returnDate\"\n                              placeholder=\"jj/mm/aa\"\n                              className=\"form-control\"\n                              onChange={e => this.change(e)}\n                            />\n                          </MDBModalBody>\n                          <MDBModalFooter>\n                            <MDBBtn color=\"danger\" onClick={this.closeModalLend}>Annuler</MDBBtn>\n                            <MDBBtn color=\"dark\" onClick={this.returnBook(this.state.returnDate)}>Enregistrer</MDBBtn>\n                          </MDBModalFooter>\n                        </MDBModal>\n                    \n                    \n                    </td>\n                  </tr>\n                ))\n              }\n            </MDBTableBody>\n          </MDBTable>\n          <div className=\"buttonGere\">\n                <Fragment>\n                    <MDBBtn href=\"/formulaireGerePret\" color=\"dark\"> \n                        Nouveau prêt\n                    </MDBBtn>\n                </Fragment>\n                \n          </div>\n          <div className=\"buttonHistoric\">\n                <Fragment>\n                    <MDBBtn href=\"/historique\" color=\"dark\"> \n                        Historique des prêts\n                    </MDBBtn>\n                </Fragment>\n                \n          </div>  \n        </div>\n      );\n    }\n}\n\nexport default MyLends;"]},"metadata":{},"sourceType":"module"}