{"ast":null,"code":"var _jsxFileName = \"/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/Inscription/inscription.js\";\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport './inscription.css';\nimport { MDBContainer, MDBRow, MDBCard, MDBCardBody } from 'mdbreact';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.change = async e => {\n      await this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmitSignUp = e => {\n      const {\n        lastname,\n        firstname,\n        email,\n        password,\n        passwordBis\n      } = this.state; //cas ou tous les champs sont remplis\n\n      if (lastname && firstname && password && email && passwordBis) {\n        //verification que tous les champs soient correctement remplis\n        if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n          this.setState({\n            error: 'Veuillez saisir une adresse mail valide !'\n          });\n        } else if (password.length < 6) {\n          this.setState({\n            error: 'Veuillez saisir un mot de passe avec au moins 6 caractères !'\n          });\n        } else if (password !== passwordBis) {\n          this.setState({\n            error: 'Le mot de passe de confirmation ne correspond pas !'\n          });\n        } else //si tous les champs sont correctement remplis\n          {\n            console.log(this.state);\n            let formData = new FormData();\n            formData.append(\"firstname\", this.state.firstname);\n            formData.append(\"lastname\", this.state.lastname);\n            formData.append(\"email\", this.state.email);\n            formData.append(\"password\", this.state.password);\n            const url = \"http://localhost:8888/API/inscription/inscription_back.php\";\n            axios.post(url, formData) //succès inscription\n            .then(function (response) {\n              this.setState({\n                isSignedUp: true\n              }); //change le statut d'inscrption comme vrai, redirection dans le render\n\n              console.log(\"inscription réussie\", response);\n              alert('Formulaire validé');\n            }.bind(this)) //echec inscription\n            .catch(error => {\n              if (error.response && error.response.status === 403) {\n                this.setState({\n                  error: 'L’adresse e-mail ' + email + ' est déjà prise.'\n                });\n              }\n\n              console.log(\"formulaire non valide\", error);\n            });\n          }\n      } else {\n        //cas ou tous les champs ne sont pas remplis\n        this.setState({\n          error: 'Veuillez saisir tous les champs !'\n        });\n      }\n\n      setTimeout(() => {\n        this.setState({\n          error: ''\n        });\n      }, 2000);\n      e.preventDefault();\n    };\n\n    this.state = {\n      lastname: null,\n      //va contenir la valeur entrée pour le champs \"nom\" du formulaire\n      firstname: null,\n      //va contenir la valeur entrée pour le champs \"prenom\" du formulaire\n      password: null,\n      //va contenir la valeur entrée pour le champs \"mot de passe\" du formulaire\n      passwordBis: null,\n      //va contenir la valeur entrée pour le champs \"mot de passe de confirmation\" du formulaire\n      email: null,\n      //va contenir la valeur entrée pour le champs \"adresse mail\" du formulaire\n      isSignedUp: false,\n      //initialise le statut d'inscription comme faux\n      error: '' //va contenir l'erreur en cas d'erreur\n\n    };\n  } //methode qui permet d'attribuer à \"lastname\", \"firstname\", \"password\", \"passwordBis\" et \"email\" les valeurs entrées au clavier par l'utilisateur\n\n\n  render() {\n    const {\n      error\n    } = this.state;\n    const container = {\n      height: 750\n    };\n    const {\n      isSignedUp\n    } = this.state;\n\n    if (isSignedUp) {\n      //redirection vers la page de connexion\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    } //affichage du formulaire d'inscription a completer par l'utilisateur\n\n\n    return React.createElement(MDBContainer, {\n      style: container,\n      className: \"containerInscription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"colInscription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(MDBCardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmitSignUp,\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"dark-grey-text mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Inscription\")), React.createElement(\"div\", {\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastName\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Nom\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"lastname\",\n      name: \"lastname\",\n      placeholder: \"Nom\",\n      className: \"form-control\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"firstname\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Pr\\xE9nom\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"firstname\",\n      name: \"firstname\",\n      placeholder: \"Pr\\xE9nom\",\n      className: \"form-control\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"email\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Adresse mail\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"mail@exemple.com\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Mot de passe\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      onChange: this.change,\n      className: \"form-control\",\n      placeholder: \"Veuillez saisir un mot de passe\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"passwordBis\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Mot de passe de confirmation\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"passwordBis\",\n      className: \"form-control\",\n      placeholder: \"Veuillez confirmer votre mot de passe\",\n      onChange: this.change,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-center py-4 mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.handleSubmitSignUp,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"S'inscrire\"), error && React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, error))))))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/Inscription/inscription.js"],"names":["React","axios","Redirect","MDBContainer","MDBRow","MDBCard","MDBCardBody","SignUp","Component","constructor","props","change","e","setState","target","id","value","handleSubmitSignUp","lastname","firstname","email","password","passwordBis","state","test","error","length","console","log","formData","FormData","append","url","post","then","response","isSignedUp","alert","bind","catch","status","setTimeout","preventDefault","render","container","height"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport './inscription.css';\n\n\n\nimport {\n  MDBContainer, MDBRow, MDBCard, MDBCardBody,\n} from 'mdbreact';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastname: null,//va contenir la valeur entrée pour le champs \"nom\" du formulaire\n      firstname: null,//va contenir la valeur entrée pour le champs \"prenom\" du formulaire\n      password: null,//va contenir la valeur entrée pour le champs \"mot de passe\" du formulaire\n      passwordBis: null,//va contenir la valeur entrée pour le champs \"mot de passe de confirmation\" du formulaire\n      email: null,//va contenir la valeur entrée pour le champs \"adresse mail\" du formulaire\n      isSignedUp: false, //initialise le statut d'inscription comme faux\n      error: '',//va contenir l'erreur en cas d'erreur\n\n    };\n  }\n\n  //methode qui permet d'attribuer à \"lastname\", \"firstname\", \"password\", \"passwordBis\" et \"email\" les valeurs entrées au clavier par l'utilisateur\n  change = async e => {\n    await this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  //methode qui permet d'envoyer les données au fichier PHP \"inscription_back.php\" afin de verifier l'inscription de l'utilisateur, lorque celui-ci appuie sur le bouton \"valider\"\n  handleSubmitSignUp = e => {\n    const {\n      lastname, firstname, email, password, passwordBis,\n    } = this.state;\n\n    //cas ou tous les champs sont remplis\n    if (lastname && firstname && password && email && passwordBis)\n    {\n      //verification que tous les champs soient correctement remplis\n\n      if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n        this.setState({\n          error: 'Veuillez saisir une adresse mail valide !',\n        });\n      } else if (password.length < 6) {\n        this.setState({\n          error: 'Veuillez saisir un mot de passe avec au moins 6 caractères !',\n        });\n      } else if (password !== passwordBis) {\n        this.setState({\n          error: 'Le mot de passe de confirmation ne correspond pas !',\n        });\n      } \n      else\n      //si tous les champs sont correctement remplis\n      {\n        console.log(this.state);\n        let formData = new FormData();\n        formData.append(\"firstname\",this.state.firstname);\n        formData.append(\"lastname\",this.state.lastname);\n        formData.append(\"email\",this.state.email);\n        formData.append(\"password\",this.state.password);\n        const url = \"http://localhost:8888/API/inscription/inscription_back.php\";\n        axios.post(url,formData)\n\n        //succès inscription\n        .then(function(response) {  \n          this.setState({isSignedUp: true});//change le statut d'inscrption comme vrai, redirection dans le render\n          console.log(\"inscription réussie\", response);\n          alert('Formulaire validé');\n        }.bind(this))\n\n        //echec inscription\n        .catch((error) => {\n          if (error.response && error.response.status === 403){\n            this.setState({\n            error: 'L’adresse e-mail '+email+' est déjà prise.',\n            });\n          }\n          console.log(\"formulaire non valide\", error);\n        }); \n      }\n    }\n    else \n    {\n      //cas ou tous les champs ne sont pas remplis\n      this.setState({\n        error: 'Veuillez saisir tous les champs !',\n      });\n    } \n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n   \n    e.preventDefault();\n  }\n\n\n  render() {\n    const { error } = this.state;\n    const container = {height: 750};\n    const {isSignedUp} = this.state;\n\n    if (isSignedUp){\n      //redirection vers la page de connexion\n      return <Redirect to=\"/\"/>;\n    }\n\n    //affichage du formulaire d'inscription a completer par l'utilisateur\n    return (\n      <MDBContainer style={container} className=\"containerInscription\">\n        <MDBRow>\n          <div className=\"colInscription\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={this.handleSubmitSignUp} className=\"form\">\n                  <div className=\"text-center\">\n                    <h2 className=\"dark-grey-text mb-5\">\n                      Inscription\n                    </h2>\n                  </div>\n                  <div className=\"grey-text\">\n                    <label htmlFor=\"lastName\" className=\"grey-text\">\n                      Nom\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"lastname\"\n                      name=\"lastname\"\n                      placeholder=\"Nom\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"firstname\" className=\"grey-text\">\n                      Prénom\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"firstname\"\n                      name=\"firstname\"\n                      placeholder=\"Prénom\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"email\" className=\"grey-text\">\n                      Adresse mail\n                    </label>\n                    <input\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      className=\"form-control\"\n                      placeholder=\"mail@exemple.com\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n                    <label htmlFor=\"password\" className=\"grey-text\">\n                      Mot de passe\n                    </label>\n                    <input\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      onChange={this.change}\n                      className=\"form-control\"\n                      placeholder=\"Veuillez saisir un mot de passe\"\n                      required\n                    />\n\n                    <br />\n                    <label htmlFor=\"passwordBis\" className=\"grey-text\">\n                      Mot de passe de confirmation\n                    </label>\n                    <input\n                      type=\"password\"\n                      id=\"passwordBis\"\n                      className=\"form-control\"\n                      placeholder=\"Veuillez confirmer votre mot de passe\"\n                      onChange={this.change}\n                      required\n                    />\n\n\n                  </div>\n                  <div className=\"text-center py-4 mt-3\">\n                    <button className=\"btn btn-primary\" onClick={this.handleSubmitSignUp} type=\"submit\">S&apos;inscrire</button>\n                    {\n                     error && (\n                     <p className=\"error\">{error}</p>\n                     )\n                    }\n                  </div>\n\n                </form>\n\n              </MDBCardBody>\n            </MDBCard>\n          </div>\n        </MDBRow>\n      </MDBContainer>\n\n    );\n  }\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}