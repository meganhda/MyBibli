{"ast":null,"code":"var _jsxFileName = \"/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/MesLivres/mesLivres.js\";\nimport React from 'react';\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter } from 'mdbreact';\nimport './mesLivres.css';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\n\nclass MyBooks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openModalBook = (id, title, author, year, date, edition, typeBook) => e => {\n      this.setState({\n        modal: true,\n        idBook: id,\n        title: title,\n        author: author,\n        year: year,\n        date: date,\n        edition: edition,\n        typeBook: typeBook\n      });\n    };\n\n    this.closeModalBook = () => {\n      this.setState({\n        modal: false\n      });\n    };\n\n    this.change = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.editBook = (title, author, year, date, edition, typeBook) => e => {\n      const {\n        idBook,\n        books\n      } = this.state;\n      let newBooks = books;\n      console.log(idBook, 'idBookSubmit');\n      this.setState({\n        modal: false\n      });\n      let formData = new FormData();\n      formData.append(\"id\", idBook);\n      formData.append(\"title\", title);\n      formData.append(\"author\", author);\n      formData.append(\"year\", year);\n      formData.append(\"date\", date);\n      formData.append(\"edition\", edition);\n      formData.append(\"typeBook\", typeBook);\n      const url = \"http://localhost:8888/API/MesLivres/modif_livre.php\";\n      axios.post(url, formData, {\n        withCredentials: true\n      }) //succes modification livre\n      .then(function (response) {\n        console.log(response.status, response);\n        alert('Modifications enregistrées, veuillez recharger la page');\n        const tmp = books;\n        newBooks = tmp.filter(livre => livre.id !== idBook);\n      }) //echec modification livre\n      .catch(error => {\n        console.log(error);\n\n        if (error.response && error.response.status === 403) {\n          console.log(error);\n          alert('Echec modification');\n        }\n      });\n      setTimeout(() => {\n        this.setState({\n          books: newBooks\n        });\n      }, 500);\n      setTimeout(() => {\n        this.setState({\n          error: ''\n        });\n      }, 2000);\n      e.preventDefault();\n    };\n\n    this.handleDelete = id => e => {\n      const {\n        books\n      } = this.state;\n      let newBooks = books;\n      let formData = new FormData();\n      formData.append(\"id\", id);\n      const url = \"http://localhost:8888/API/MesLivres/supprimer_livre.php\";\n      axios.post(url, formData, {\n        withCredentials: true\n      }) //succes suppression livre\n      .then(function (response) {\n        console.log(response);\n        const tmp = books;\n        newBooks = tmp.filter(livre => livre.id !== id);\n        alert('Livre supprimé de votre bibliothèque');\n      }) //echec suppression livre\n      .catch(error => {\n        console.log(error);\n\n        if (error.response.status === 403) {\n          console.log(error);\n          alert('Echec de la suppression');\n        }\n      });\n      setTimeout(() => {\n        this.setState({\n          books: newBooks\n        });\n      }, 500);\n      setTimeout(() => {\n        this.setState({\n          error: ''\n        });\n      }, 2000);\n      e.preventDefault();\n    };\n\n    this.state = {\n      noSession: false,\n      //booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      loading: true,\n      //booleen initialisé comme vrai, qui va changer lors de la récupération des données\n      books: [],\n      //va contenir les livres de l'utilisateur\n      modal: false,\n      //booleen qui va permettre d'ouvrir/fermer une fenetre lorsque l'utilisateur appuie sur \"modifier\"\n      title: '',\n      //va contenir la valeur entrée pour le champs \"titre\" du formulaire de modification\n      author: '',\n      //va contenir la valeur entrée pour le champs \"auteur\" du formulaire de modification\n      year: '',\n      //va contenir la valeur entrée pour le champs \"année de sortie\" du formulaire de modification\n      date: '',\n      //va contenir la valeur entrée pour le champs \"date d'achat\" du formulaire de modification\n      edition: '',\n      //va contenir la valeur entrée pour le champs \"edition\" du formulaire de modification\n      typeBook: '',\n      //va contenir la valeur entrée pour le champs \"type\" du formulaire de modification\n      id: '',\n      //va contenir l'id du livre selectionné par l'utilisateur lorsqu'il appuiera sur les boutons \"modifier\"/\"supprimer\"\n      error: '',\n      //va contenir l'erreur en cas d'erreur\n      idBook: null //va contenir l'id du livre a modifier\n\n    };\n    this.checkSession = this.checkSession.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.editBook = this.editBook.bind(this);\n    this.openModalBook = this.openModalBook.bind(this);\n  } //Vérifie que la session est active\n\n\n  checkSession() {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {\n      withCredentials: true\n    }).then(function (response) {\n      console.log(response);\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        this.setState({\n          noSession: true\n        }); //s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n\n        console.log(error);\n      }\n    });\n  } //methode qui permet d'ouvrir une fenetre contenant un formulaire pré-rempli des informations du livre selectionné par l'utilisateur, lorsque celui-ci appuie sur \"modifier\"\n\n\n  //methode qui permet de récuperer les livres de l'utilisateur via le fichier \"liste_livres.php\"\n  async componentDidMount() {\n    const url = \"http://localhost:8888/API/MesLivres/liste_livres.php\";\n    const response = await fetch(url, {\n      credentials: 'include'\n    });\n    const data = await response.json();\n    this.setState({\n      books: data.results.livres,\n      loading: false\n    }); //\"books\" contient les données reçues par le back-end et booleen \"loading\" changé comme \"faux\"\n\n    console.log(data.results.livres);\n  }\n\n  render() {\n    const {\n      noSession\n    } = this.state; //appel à la methode qui verifie la session\n\n    this.checkSession(); //s'il n'y a pas de session active, redirection vers la page de connexion\n\n    if (noSession) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      });\n    } //si le temps de récupération des données a afficher est long\n\n\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"chargement...\");\n    } //si l'utilisateur n'a pas de livres deja ajoutés a sa bibliotheque\n\n\n    if (this.state.books.length === 0) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"myBibli\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \" Mes livres \"), React.createElement(\"div\", {\n        className: \"noBook\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Vous n'avez actuellement aucun livre dans votre biblioth\\xE8que.\"));\n    } //sinon:\n    //affichage d'un tableau avec les livres de l'utilisateur, grâce a la fonction map qui va parcourir \"books\"\n    //affichage des boutons \"supprimer\" et \"modifier\" sur chaque ligne du tableau\n    //ouverture d'une fenetre avec le formulaire de modification \n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"myBibli\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \" Mes livres \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \" Vous avez \", this.state.books.length, \" livre(s) dans votre biblioth\\xE8que:\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(MDBTable, {\n      hover: true,\n      bordered: true,\n      scrollY: true,\n      maxHeight: \"400px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(MDBTableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Titre\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Auteur\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Ann\\xE9e de sortie\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Date d'achat\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Edition\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Statut\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))), React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.state.books.map(livre => React.createElement(\"tr\", {\n      key: livre.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, livre.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, livre.author), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, livre.year), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, livre.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, livre.edition), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, livre.typeBook), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, livre.status), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      onClick: this.openModalBook(livre.id, livre.title, livre.author, livre.year, livre.date, livre.edition, livre.typeBook),\n      color: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Modifier\"), React.createElement(MDBModal, {\n      isOpen: this.state.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(MDBModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Modifications du livre\"), React.createElement(MDBModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Titre\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.title,\n      className: \"form-control\",\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"author\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Auteur\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"author\",\n      value: this.state.author,\n      className: \"form-control\",\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"year\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Ann\\xE9e de sortie\"), React.createElement(\"input\", {\n      type: \"number\",\n      name: \"year\",\n      className: \"form-control\",\n      value: this.state.year,\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"date\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Date d'achat\"), React.createElement(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      value: this.state.date,\n      className: \"form-control\",\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"edition\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Edition\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"edition\",\n      value: this.state.edition,\n      className: \"form-control\",\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"typeBook\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Type\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"typeBook\",\n      value: this.state.typeBook,\n      className: \"form-control\",\n      onChange: e => this.change(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    })), React.createElement(MDBModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      color: \"danger\",\n      onClick: this.closeModalBook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Annuler\"), React.createElement(MDBBtn, {\n      onClick: this.editBook(this.state.title, this.state.author, this.state.year, this.state.date, this.state.edition, this.state.typeBook),\n      color: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Enregistrer\")))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(MDBBtn, {\n      onClick: this.handleDelete(livre.id),\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Supprimer\")))))));\n  }\n\n}\n\nexport default MyBooks;","map":{"version":3,"sources":["/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/MesLivres/mesLivres.js"],"names":["React","MDBTable","MDBTableBody","MDBTableHead","MDBBtn","MDBModal","MDBModalHeader","MDBModalBody","MDBModalFooter","axios","Redirect","MyBooks","Component","constructor","props","openModalBook","id","title","author","year","date","edition","typeBook","e","setState","modal","idBook","closeModalBook","change","target","name","value","editBook","books","state","newBooks","console","log","formData","FormData","append","url","post","withCredentials","then","response","status","alert","tmp","filter","livre","catch","error","setTimeout","preventDefault","handleDelete","noSession","loading","checkSession","bind","get","componentDidMount","fetch","credentials","data","json","results","livres","render","length","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBModal, MDBModalHeader, MDBModalBody,MDBModalFooter, } from 'mdbreact';\nimport './mesLivres.css';\nimport axios from 'axios';\nimport { Redirect} from 'react-router';\n\nclass MyBooks extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      loading: true,//booleen initialisé comme vrai, qui va changer lors de la récupération des données\n      books: [],//va contenir les livres de l'utilisateur\n      modal: false,//booleen qui va permettre d'ouvrir/fermer une fenetre lorsque l'utilisateur appuie sur \"modifier\"\n      title: '',//va contenir la valeur entrée pour le champs \"titre\" du formulaire de modification\n      author: '',//va contenir la valeur entrée pour le champs \"auteur\" du formulaire de modification\n      year: '',//va contenir la valeur entrée pour le champs \"année de sortie\" du formulaire de modification\n      date: '',//va contenir la valeur entrée pour le champs \"date d'achat\" du formulaire de modification\n      edition: '',//va contenir la valeur entrée pour le champs \"edition\" du formulaire de modification\n      typeBook: '',//va contenir la valeur entrée pour le champs \"type\" du formulaire de modification\n      id: '',//va contenir l'id du livre selectionné par l'utilisateur lorsqu'il appuiera sur les boutons \"modifier\"/\"supprimer\"\n      error: '',//va contenir l'erreur en cas d'erreur\n      idBook: null,//va contenir l'id du livre a modifier\n    }\n    this.checkSession = this.checkSession.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.editBook = this.editBook.bind(this);\n    this.openModalBook = this.openModalBook.bind(this);\n  }\n\n  //Vérifie que la session est active\n  checkSession () {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n    .then(function(response){\n      console.log(response);\n    })\n\n    .catch((error) => {\n      if(error.response && error.response.status=== 404){\n        this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n        console.log(error);\n      }\n    });\n  }\n\n  //methode qui permet d'ouvrir une fenetre contenant un formulaire pré-rempli des informations du livre selectionné par l'utilisateur, lorsque celui-ci appuie sur \"modifier\"\n  openModalBook = (id, title, author, year, date, edition, typeBook) => e => {\n    this.setState({\n      modal: true,\n      idBook: id,\n      title: title,\n      author: author,\n      year: year,\n      date: date,\n      edition: edition,\n      typeBook: typeBook\n    });\n  }\n\n  //methode qui permet de fermer la fenetre de modification, lorsque l'utilisateur appuie sur \"annuler\"\n  closeModalBook = () => {\n  this.setState({\n    modal: false,\n    });\n  }\n\n  //methode qui permet d'attribuer à \"title\", \"author\", \"year\", \"date\", \"edition\" et \"typeBook\" les nouvelles valeurs entrées au clavier par l'utilisateur lors de la modification d'un livre\n  change = e => {\n    this.setState ({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //methode qui permet d'envoyer les données au fichier PHP \"modif_livre.php\" afin d'enregistrer les nouvelles donnees d'un livre, lorque l'utilisateur appuie sur le bouton \"enregistrer\" de la fenetre de modification\n  editBook = (title, author, year, date, edition, typeBook) => e => {\n    const { idBook, books } = this.state;\n    let newBooks = books;\n    console.log(idBook,'idBookSubmit');\n    this.setState({\n      modal: false,\n    })\n    let formData = new FormData();\n    formData.append(\"id\",idBook);\n    formData.append(\"title\",title);\n    formData.append(\"author\",author);\n    formData.append(\"year\",year);\n    formData.append(\"date\",date);\n    formData.append(\"edition\",edition);\n    formData.append(\"typeBook\",typeBook);\n    const url = \"http://localhost:8888/API/MesLivres/modif_livre.php\"\n    axios.post(url, formData, {withCredentials: true})\n    \n    //succes modification livre\n    .then(function(response){\n      console.log(response.status, response)\n      alert('Modifications enregistrées, veuillez recharger la page');\n      const tmp = books;\n      newBooks = tmp.filter(livre => livre.id !== idBook);\n    })\n\n    //echec modification livre\n    .catch((error)=>{\n      console.log(error)\n      if (error.response && error.response.status === 403){\n        console.log(error);\n        alert('Echec modification');\n      }\n    });\n    \n    setTimeout(() => {\n      this.setState({\n        books: newBooks\n      })\n    }, 500);\n\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n  //methode qui permet d'envoyer au fichier PHP \"supprimer_livre.php\" l'id du livre a supprimer, lorsque l'utilisateur appuie sur le bouton \"supprimer\"\n  handleDelete = (id) => e => {\n    const { books } = this.state;\n    let newBooks = books;\n    let formData = new FormData();\n    formData.append(\"id\",id);\n    const url = \"http://localhost:8888/API/MesLivres/supprimer_livre.php\"\n    axios.post(url, formData, {withCredentials: true})\n    \n    //succes suppression livre\n    .then(function(response){\n      console.log(response);\n      const tmp = books;\n      newBooks = tmp.filter(livre => livre.id !== id);\n      alert('Livre supprimé de votre bibliothèque');\n    })\n\n    //echec suppression livre\n    .catch((error)=>{\n      console.log(error)\n      if (error.response.status === 403){\n        console.log(error);\n        alert('Echec de la suppression');\n      }\n    });\n\n    setTimeout(() => {\n      this.setState({\n        books: newBooks\n      })\n    }, 500);\n    \n\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n\n  //methode qui permet de récuperer les livres de l'utilisateur via le fichier \"liste_livres.php\"\n  async componentDidMount() {\n    const url = \"http://localhost:8888/API/MesLivres/liste_livres.php\";\n\n    const response = await fetch(url,{credentials: 'include'});\n    const data = await response.json();\n    this.setState({books: data.results.livres, loading: false})//\"books\" contient les données reçues par le back-end et booleen \"loading\" changé comme \"faux\"\n    console.log(data.results.livres);\n  }\n\n\n  \n  render() {\n    const {noSession} = this.state;\n\n     //appel à la methode qui verifie la session\n     this.checkSession ();\n\n     //s'il n'y a pas de session active, redirection vers la page de connexion\n     if(noSession){\n       return <Redirect to=\"/\"/>;\n     }\n\n    //si le temps de récupération des données a afficher est long\n    if(this.state.loading){\n      return <div>chargement...</div>;\n    }\n\n    //si l'utilisateur n'a pas de livres deja ajoutés a sa bibliotheque\n    if (this.state.books.length === 0){\n      return (\n        <div>\n          <h1 className=\"myBibli\"> Mes livres </h1>\n          <div className=\"noBook\">\n            Vous n'avez actuellement aucun livre dans votre bibliothèque.\n          </div>\n        </div>\n      );\n    }\n\n    //sinon:\n    //affichage d'un tableau avec les livres de l'utilisateur, grâce a la fonction map qui va parcourir \"books\"\n    //affichage des boutons \"supprimer\" et \"modifier\" sur chaque ligne du tableau\n    //ouverture d'une fenetre avec le formulaire de modification \n    return (\n      <div>\n        <h1 className=\"myBibli\"> Mes livres </h1>\n        <br></br>\n        <h2> Vous avez {this.state.books.length} livre(s) dans votre bibliothèque:</h2>\n        <br></br>\n        <MDBTable hover bordered scrollY maxHeight=\"400px\">\n          <MDBTableHead>\n            <tr>\n            <th>Titre</th>\n            <th>Auteur</th>\n            <th>Année de sortie</th>\n            <th>Date d'achat</th>\n            <th>Edition</th>\n            <th>Type</th>\n            <th>Statut</th>\n            <th></th>\n            <th></th>\n            </tr>\n          </MDBTableHead>\n          <MDBTableBody>\n            {\n              this.state.books.map(livre => (\n                <tr key={livre.id} >\n                  <td>{livre.title}</td>\n                  <td>{livre.author}</td>\n                  <td>{livre.year}</td>\n                  <td>{livre.date}</td>\n                  <td>{livre.edition}</td>\n                  <td>{livre.typeBook}</td>\n                  <td>{livre.status}</td>\n                  <td><MDBBtn onClick={this.openModalBook(livre.id, livre.title, livre.author, livre.year, livre.date, livre.edition, livre.typeBook)} color=\"dark\">Modifier</MDBBtn>\n                    <MDBModal isOpen={this.state.modal}>\n                      <MDBModalHeader>Modifications du livre</MDBModalHeader>\n                      <MDBModalBody>\n                      <label htmlFor=\"title\" className=\"grey-text\">\n                            Titre\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"title\"\n                            value={this.state.title}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n\n                            />\n\n                            <br/>\n\n                            <label htmlFor=\"author\" className=\"grey-text\">\n                            Auteur\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"author\"\n                            value={this.state.author}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n\n                            />\n\n                            <br/>\n\n\n                      <label htmlFor=\"year\" className=\"grey-text\">\n                            Année de sortie\n                          </label>\n                          <input\n                            type=\"number\"\n                            name=\"year\" \n                            className=\"form-control\"\n                            value={this.state.year}\n                            onChange={e => this.change(e)}\n                            \n                          />\n\n                          <br />\n\n                          <label htmlFor=\"date\" className=\"grey-text\">\n                            Date d&apos;achat\n                          </label>\n                          <input\n                            type=\"date\"\n                            name=\"date\"\n                            value={this.state.date}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n                            \n                          />\n\n                          <br />\n\n                          <label htmlFor=\"edition\" className=\"grey-text\">\n                            Edition\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"edition\"\n                            value={this.state.edition}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n                            \n                          />\n\n                          <br />\n\n                          <label htmlFor=\"typeBook\" className=\"grey-text\">\n                            Type\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"typeBook\"\n                            value={this.state.typeBook}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n                            \n                          />\n                      </MDBModalBody>\n                      <MDBModalFooter>\n                        <MDBBtn color=\"danger\" onClick={this.closeModalBook}>Annuler</MDBBtn>\n                        <MDBBtn onClick={this.editBook(this.state.title, this.state.author, this.state.year, this.state.date, this.state.edition, this.state.typeBook)} color=\"dark\">Enregistrer</MDBBtn>\n                      </MDBModalFooter>\n                    </MDBModal>\n                  \n                  </td>\n                  <td><MDBBtn onClick={this.handleDelete(livre.id)} color=\"danger\">Supprimer</MDBBtn></td>\n                </tr>\n              ))\n            }\n          </MDBTableBody>\n        </MDBTable>\n\n      </div>\n    );\n  }\n}\n\nexport default MyBooks;"]},"metadata":{},"sourceType":"module"}