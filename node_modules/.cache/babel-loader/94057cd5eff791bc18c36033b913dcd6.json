{"ast":null,"code":"var _jsxFileName = \"/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/MonCompte/monCompte.js\";\nimport React from \"react\";\nimport './monCompte.css';\nimport { MDBTableBody, MDBTable, MDBBtn } from \"mdbreact\";\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\n\nclass MyAccount extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeFirstName = event => {\n      this.setState({\n        firstName: event.target.value\n      });\n    };\n\n    this.handleChangeLastName = event => {\n      this.setState({\n        lastName: event.target.value\n      });\n    };\n\n    this.handleSubmitFirstName = firstName => e => {\n      let formData = new FormData();\n      formData.append(\"firstname\", firstName);\n      const url = \"http://localhost:8888/API/MonCompte/modifier_firstname.php\";\n      axios.post(url, formData, {\n        withCredentials: true\n      }) //succes modification prénom\n      .then(function (response) {\n        console.log(response.status, response);\n        alert('Modification du prénom enregistrée');\n      }) //echec modification prénom\n      .catch(error => {\n        console.log(error);\n\n        if (error.response && error.response.status === 403) {\n          console.log(error);\n          alert('Echec modification');\n        }\n      });\n      setTimeout(() => {\n        this.setState({\n          error: ''\n        });\n      }, 2000);\n      e.preventDefault();\n    };\n\n    this.handleSubmitLastName = lastName => e => {\n      let formData = new FormData();\n      formData.append(\"lastname\", lastName);\n      const url = \"http://localhost:8888/API/MonCompte/modifier_lastname.php\";\n      axios.post(url, formData, {\n        withCredentials: true\n      }) //succes modification nom\n      .then(function (response) {\n        console.log(response.status, response);\n        alert('Modification du nom enregistrée');\n      }) //echec modification nom\n      .catch(error => {\n        console.log(error);\n\n        if (error.response && error.response.status === 403) {\n          console.log(error);\n          alert('Echec modification');\n        }\n      });\n      setTimeout(() => {\n        this.setState({\n          error: ''\n        });\n      }, 2000);\n      e.preventDefault();\n    };\n\n    this.state = {\n      noSession: false,\n      //booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      informations: [],\n      //va contenir les informations de l'utilisateur\n      loading: true,\n      //booleen initialisé comme vrai, qui va changer lors de la récupération des données\n      error: '',\n      //va contenir l'erreur en cas d'erreur\n      firstName: undefined,\n      //va contenir la nouvelle valeur du prenom entrée pour le champs \"prenom\"\n      lastName: undefined //va contenir la nouvelle valeur du nom entrée pour le champs \"nom\"\n\n    };\n    this.checkSession = this.checkSession.bind(this);\n  } //Vérifie que la session est active\n\n\n  checkSession() {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {\n      withCredentials: true\n    }).then(function (response) {\n      console.log(response);\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        this.setState({\n          noSession: true\n        }); //s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n\n        console.log(error);\n      }\n    });\n  } //methode qui permet d'attribuer à \"firstName\" la valeur entrée au clavier par l'utilisateur\n\n\n  //methode qui permet de récuperer les linformations de l'utilisateur via le fichier \"mon_compte.php\"     \n  async componentDidMount() {\n    const url = \"http://localhost:8888/API/MonCompte/mon_compte.php\";\n    const response = await fetch(url, {\n      credentials: 'include'\n    });\n    const data = await response.json();\n    this.setState({\n      informations: data.results.profile[0],\n      //\"informations\" contient les données reçues par le back-end \n      loading: false //booleen \"loading\" changé comme \"faux\"\n\n    });\n    console.log(data.results.profile);\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      informations\n    } = this.state;\n    const {\n      noSession\n    } = this.state; //appel à la methode qui verifie la session\n\n    this.checkSession(); //s'il n'y a pas de session active, redirection vers la page de connexion\n\n    if (noSession) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      });\n    } //si le temps de récupération des données a afficher est long\n\n\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"chargement...\");\n    } //affichage des informations de l'utilisateur\n    //affichage des champs a remplir si l'utilisateur veut modifier ses donnees\n    //affichage des boutons \"modifier\"\n\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"titleMyAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Mes informations personnelles\"), React.createElement(MDBTable, {\n      hover: true,\n      bordered: true,\n      maxHeight: \"350px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(MDBTableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Adresse email : \", informations.email)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Pr\\xE9nom :\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"inputModif\",\n      value: firstName,\n      defaultValue: informations.firstname,\n      onChange: e => this.handleChangeFirstName(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(MDBBtn, {\n      color: \"dark\",\n      onClick: this.handleSubmitFirstName(this.state.firstName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Modifier\"))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Nom :\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"inputModif\",\n      value: lastName,\n      defaultValue: informations.lastname,\n      onChange: e => this.handleChangeLastName(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(MDBBtn, {\n      color: \"dark\",\n      onClick: this.handleSubmitLastName(this.state.lastName),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Modifier\"))))));\n  }\n\n}\n\nexport default MyAccount;","map":{"version":3,"sources":["/Users/Megane/MonProjet/2019-l2aj2/trunk/2019-l2aj2/APP_Mac/src/components/MonCompte/monCompte.js"],"names":["React","MDBTableBody","MDBTable","MDBBtn","axios","Redirect","MyAccount","Component","constructor","props","handleChangeFirstName","event","setState","firstName","target","value","handleChangeLastName","lastName","handleSubmitFirstName","e","formData","FormData","append","url","post","withCredentials","then","response","console","log","status","alert","catch","error","setTimeout","preventDefault","handleSubmitLastName","state","noSession","informations","loading","undefined","checkSession","bind","get","componentDidMount","fetch","credentials","data","json","results","profile","render","email","firstname","lastname"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './monCompte.css';\nimport { MDBTableBody, MDBTable, MDBBtn } from \"mdbreact\";\nimport axios from 'axios';\nimport { Redirect} from 'react-router';\n\n\nclass MyAccount extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state ={\n            noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n            informations: [],//va contenir les informations de l'utilisateur\n            loading: true,//booleen initialisé comme vrai, qui va changer lors de la récupération des données\n            error:'',//va contenir l'erreur en cas d'erreur\n            firstName: undefined,//va contenir la nouvelle valeur du prenom entrée pour le champs \"prenom\"\n            lastName:undefined,//va contenir la nouvelle valeur du nom entrée pour le champs \"nom\"\n        }\n        this.checkSession = this.checkSession.bind(this);\n    }\n\n    //Vérifie que la session est active\n    checkSession () {\n        axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n        .then(function(response){\n        console.log(response);\n        })\n\n        .catch((error) => {\n        if(error.response && error.response.status=== 404){\n            this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n            console.log(error);\n        }\n        });\n    }\n\n    //methode qui permet d'attribuer à \"firstName\" la valeur entrée au clavier par l'utilisateur\n    handleChangeFirstName = (event) => {\n        this.setState({\n            firstName: event.target.value\n        })\n    }\n\n    //methode qui permet d'attribuer à \"lastName\" la valeur entrée au clavier par l'utilisateur\n    handleChangeLastName = (event) => {\n        this.setState({\n            lastName: event.target.value\n        })\n    }\n\n    //methode qui permet d'envoyer les données au fichier PHP \"modifier_firstname.php\" afin d'enregistrer la nouvelle donnée, lorque l'utilisateur appuie sur le bouton \"modifier\" a cote du prenom\n    handleSubmitFirstName = (firstName) => e => {\n        let formData = new FormData();\n        formData.append(\"firstname\",firstName);\n        const url = \"http://localhost:8888/API/MonCompte/modifier_firstname.php\"\n        axios.post(url, formData, {withCredentials: true})\n        \n        //succes modification prénom\n        .then(function(response){\n          console.log(response.status, response)\n          alert('Modification du prénom enregistrée');\n        })\n    \n        //echec modification prénom\n        .catch((error)=>{\n          console.log(error)\n          if (error.response && error.response.status === 403){\n            console.log(error);\n            alert('Echec modification');\n          }\n        });\n    \n        setTimeout(() => {\n          this.setState({\n            error: '',\n          });\n        }, 2000);\n              \n        e.preventDefault();\n      }\n\n      //methode qui permet d'envoyer les données au fichier PHP \"modifier_lastname.php\" afin d'enregistrer la nouvelle donnée, lorque l'utilisateur appuie sur le bouton \"modifier\" a cote du nom\n      handleSubmitLastName = (lastName) => e => {\n        let formData = new FormData();\n        formData.append(\"lastname\",lastName);\n        const url = \"http://localhost:8888/API/MonCompte/modifier_lastname.php\"\n        axios.post(url, formData, {withCredentials: true})\n        \n        //succes modification nom\n        .then(function(response){\n          console.log(response.status, response)\n          alert('Modification du nom enregistrée');\n        })\n    \n        //echec modification nom\n        .catch((error)=>{\n          console.log(error)\n          if (error.response && error.response.status === 403){\n            console.log(error);\n            alert('Echec modification');\n          }\n        });\n    \n        setTimeout(() => {\n          this.setState({\n            error: '',\n          });\n        }, 2000);\n              \n        e.preventDefault();\n      }\n      \n\n      //methode qui permet de récuperer les linformations de l'utilisateur via le fichier \"mon_compte.php\"     \n    async componentDidMount() {\n        const url = \"http://localhost:8888/API/MonCompte/mon_compte.php\";\n        const response = await fetch(url,{credentials: 'include'});\n        const data = await response.json();\n        this.setState({\n            informations: data.results.profile[0], //\"informations\" contient les données reçues par le back-end \n            loading: false //booleen \"loading\" changé comme \"faux\"\n        })\n        console.log(data.results.profile);\n    }\n\n    render() {\n        const { firstName, lastName, informations } = this.state;\n        const {noSession} = this.state;\n\n        //appel à la methode qui verifie la session\n        this.checkSession ();\n\n        //s'il n'y a pas de session active, redirection vers la page de connexion\n        if(noSession){\n          return <Redirect to=\"/\"/>;\n        }\n\n        //si le temps de récupération des données a afficher est long\n        if(this.state.loading){\n            return <div>chargement...</div>;\n        }\n\n        //affichage des informations de l'utilisateur\n        //affichage des champs a remplir si l'utilisateur veut modifier ses donnees\n        //affichage des boutons \"modifier\"\n        return(\n            <div>\n                <h1 className = \"titleMyAccount\">Mes informations personnelles</h1>\n                <MDBTable hover bordered maxHeight=\"350px\">\n                    <MDBTableBody>  \n                        <tr>\n                            <td>Adresse email : {informations.email}</td>\n                        </tr>\n                        <tr>\n                            <td>Prénom : \n                              <br></br>\n                                <input className=\"inputModif\" value={firstName} defaultValue={informations.firstname} onChange={e => this.handleChangeFirstName(e)}/>          \n                            <MDBBtn color=\"dark\" onClick={this.handleSubmitFirstName(this.state.firstName)}>Modifier</MDBBtn>\n                            </td>   \n                        </tr>\n                        <tr>\n                            <td>Nom : \n                              <br></br>\n                                <input className=\"inputModif\" value={lastName} defaultValue={informations.lastname} onChange={e => this.handleChangeLastName(e)}/>         \n                            <MDBBtn color=\"dark\" onClick={this.handleSubmitLastName(this.state.lastName)}>Modifier</MDBBtn></td>\n                        </tr>\n                    </MDBTableBody>\n            </MDBTable>\n            </div>\n        )\n    }   \n}\n\nexport default MyAccount;"]},"metadata":{},"sourceType":"module"}