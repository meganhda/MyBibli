{"version":3,"sources":["components/NavBar/navBar.js","components/Header/header.js","components/Footer/footer.js","container/App/App.js","components/Connexion/connexion.js","components/Erreur404/erreur404.js","components/Inscription/inscription.js","components/MonCompte/monCompte.js","components/Accueil/accueil.js","components/AjoutLivre/ajoutLivre.js","components/GerePret/formulaireGerePret.js","components/ProchainAchat/formulaireAchat.js","components/MesPrets/mesPrets.js","components/MesLivres/mesLivres.js","components/MesProchainsAchats/mesProchainsAchats.js","components/Historique/historique.js","routes.js","index.js"],"names":["NavbarPage","state","isOpen","logOut","toggleCollapse","setState","axios","get","withCredentials","then","response","console","log","this","bind","catch","error","status","to","style","backgroundColor","dark","expand","scrolling","fixed","onClick","id","navbar","left","active","className","right","nav","caret","href","handleLogOut","Component","Header","pathname","location","Footer","color","fluid","Date","getFullYear","App","children","Login","props","change","e","a","target","value","handleSubmitLogIn","email","password","formData","FormData","append","post","loggedIn","data","setTimeout","preventDefault","onSubmit","htmlFor","type","name","onChange","React","Erreur404","SignUp","handleSubmitSignUp","lastname","firstname","passwordBis","test","length","isSignedUp","alert","height","placeholder","required","MyAccount","handleChangeFirstName","event","firstName","handleChangeLastName","lastName","handleSubmitFirstName","handleSubmitLastName","noSession","informations","loading","undefined","checkSession","fetch","credentials","json","results","profile","hover","bordered","maxHeight","defaultValue","HomePage","searchTitle","search","filter","livres","searchAuthor","searchYear","searchEdition","searchTypeBook","bgRed","size","map","livre","key","title","author","typeBook","year","edition","date","basic","AddBook","handleSubmitBook","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","warn","LendBook","handleSubmitLend","borrower","borrowDate","registeredLend","NextPurchase","handleSubmitPurchase","registeredPurchase","MyLends","openModalLend","modal","idLend","closeModalLend","returnBook","returnDate","lends","newBooks","scrollY","MyBooks","openModalBook","idBook","closeModalBook","editBook","books","handleDelete","NextPurchasePage","openModalBuy","idPurchase","closeModalBuy","buyBook","purchases","Change","Historic","historic","date1","date2","AppRoutes","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.718a670b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport { MDBNavbar,  MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem,  } from \"mdbreact\";\nimport axios from \"axios\";\nimport { Redirect} from 'react-router';\n\n\nclass NavbarPage extends Component {\nstate = {\n  isOpen: false,//booleen menu deroulant initialise a \"faux\"\n  logOut: false,//booleen de deconnexion initialise a \"faux\"\n};\n\n //fonction qui permet de fermer la session via le ficher PHP \"logout.php\" lorsque l'utilisateur appuie sur \"se deconnecter\"\n handleLogOut () {\n  axios.get(\"http://localhost:8888/API/MonCompte/logout.php\", {withCredentials: true})\n\n  //succes deconnexion\n  .then(function(response){\n    console.log(\"successful logout\", response);\n    this.setState({logOut: true});//booleen de connexion changé comme \"vrai\"\n  }.bind(this))\n\n  //echec deconnexion\n  .catch((error) => {\n    if(error.response && error.response.status=== 403){\n      console.log(error);\n    }\n  });\n}\n\n//fonction qui permet d'ouvrir/fermer les menus deroulants lorsque l'utilisateur appuie sur \"contact\" ou \"mon compte\"\ntoggleCollapse = () => {\n  this.setState({ isOpen: !this.state.isOpen });//change la valeur de \"isOpen\"\n}\n\nrender() {\n  const bgRed = {backgroundColor: 'rgb(83, 4, 4)'}\n  const{logOut} = this.state;\n\n  //Redirection vers page de connexion quand l'utilisateur se deconnecte\n  if(logOut){\n    return <Redirect to=\"/\"/>;\n  };\n\n  //affichage du menu avec redirections vers les pages correspondantes\n  return (\n      <MDBNavbar style={bgRed} dark expand=\"md\" scrolling fixed=\"top\">\n\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n          <MDBNavbarNav left>\n          <MDBNavItem active  className=\"M\">\n              <MDBNavLink to=\"/accueil\"><strong>MyBibli</strong></MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem active>\n              <MDBNavLink to=\"/mesLivres\">Mes livres</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink to=\"/ajoutLivre\">Ajouter un livre</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink to=\"/mesPrets\">Gérer mes prêts</MDBNavLink>\n            </MDBNavItem>\n            <MDBNavItem>\n              <MDBNavLink to=\"/prochainAchat\">Mes prochains achats</MDBNavLink>\n            </MDBNavItem>\n            </MDBNavbarNav>\n            \n\n            <MDBNavbarNav right>\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret>\n                  <div className=\"d-none d-md-inline\">Contact</div>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu className=\"dropdown-default\">\n                  <MDBDropdownItem href=\"mailto:mybibli.sup@gmail.com\">mybibli.sup@gmail.com</MDBDropdownItem>\n                  \n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n\n            <MDBNavItem>\n              <MDBDropdown>\n                <MDBDropdownToggle nav caret>\n                  <div className=\"d-none d-md-inline\">Mon compte</div>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu className=\"dropdown-default\">\n                <MDBDropdownItem >\n                 <Link to=\"/gererMonCompte\">\n                    Gérer mon compte\n                    </Link>\n                    </MDBDropdownItem>\n                  <MDBDropdownItem  onClick = {this.handleLogOut} >\n                  <Link to=\"/\">\n                    Se déconnecter\n                    </Link>\n                    </MDBDropdownItem>\n                </MDBDropdownMenu>\n              </MDBDropdown>\n            </MDBNavItem>\n        \n    \n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n    );\n  }\n}\n\nexport default NavbarPage;\n","import React from 'react';\nimport NavBar from '../NavBar/navBar';\n//import './header.css';\n\nconst Header = ({ location }) => {\n  const { pathname } = location;\n  return (\n    <>\n      {\n                  /* le header est partout sauf sur les pages citées ci dessous */\n                  pathname !== '/' && pathname !== '/inscription' && pathname !== '/erreur404' && pathname !== '/accueil' &&(\n                    /* le header est composé seulement de la bar de navigation importer par le component suivant */\n                  <header>\n                    <NavBar />\n                  </header>\n                  )\n              }\n    </>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n//import './footer.css';\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\nconst Footer = ({ location }) => {\n  const { pathname } = location;\n  return (\n    <>\n      {\n                /* le footer est partout sauf sur les pages citées ci dessous */\n                pathname !== '/' && pathname !== '/inscription' && pathname !== '/erreur404' && (\n                <footer className=\"footer\">\n                  <MDBFooter color=\"cyan\" className=\"font-small darken-3 pt-0\">\n      \n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright:{\" \"}\n          <a href=\"http://localhost:3000/accueil\"> MyBibli </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n                </footer>\n                )\n            }\n    </>\n  );\n};\n\nexport default Footer;\n","/* eslint-disable react/require-default-props */\nimport React from 'react';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport Proptypes from 'prop-types';\n// eslint-disable-next-line import/extensions\nimport Header from '../../components/Header/header.js';\nimport Footer from '../../components/Footer/footer';\nimport './App.css';\n\n// eslint-disable-next-line no-irregular-whitespace\nconst App = ({ children, location }) => (\n  <>\n    <Header location={location} />\n    <main>\n      {children}\n    </main>\n    <Footer location={location} />\n  </>\n);\n\nApp.propTypes = {\n  // eslint-disable-next-line react/require-default-props\n  children: Proptypes.node,\n  // eslint-disable-next-line react/no-unused-prop-types\n  titleHeader: Proptypes.string,\n  // eslint-disable-next-line react/no-unused-prop-types\n  titleFooter: Proptypes.string,\n};\n\n\nexport default App;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Redirect} from 'react-router';\nimport {\n  MDBContainer, MDBRow, MDBCard, MDBCardBody, MDBModalFooter,\n} from 'mdbreact';\nimport './connexion.css';\nimport axios from 'axios';\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      password: null,//va contenir la valeur entrée pour le champs \"mot de passe\" du formulaire\n      email: null,//va contenir la valeur entrée pour le champs \"adresse mail\" du formulaire\n      loggedIn: false, //initialise le statut de connexion comme faux\n      error: '',//va contenir l'erreur en cas d'erreur\n\n    };\n  }\n\n  //methode qui permet d'attribuer à \"email\" et \"password\" les valeurs entrées au clavier par l'utilisateur\n  change = async e => {\n    await this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  //methode qui permet d'envoyer les données au fichier PHP \"login.php\" afin de verifier l'identification de l'utilisateur, lorque celui-ci appuie sur le bouton \"valider\"\n  handleSubmitLogIn = e => {\n    const { email, password } = this.state;\n\n    //cas ou tous les champs sont remplis\n    if (password && email) {\n      \n      console.log(this.state);\n      let formData = new FormData();\n      formData.append(\"email\",this.state.email);\n      formData.append(\"password\",this.state.password);\n      const url = \"http://localhost:8888/API/Connexion/login.php\";\n      axios.post(url, formData, {withCredentials: true})\n\n      //succès connexion\n      .then(function(response) {  \n        this.setState({loggedIn: true});//si la connexion marche, change le statut de connexion comme vrai, redirection dans le render\n        console.log(\"connexion réussie - email et mot de passe valides\", response);\n      }.bind(this))\n\n      //echec connexion\n      .catch((error) => {\n        if(error.response && error.response.status === 403){\n          this.setState({\n            error: error.response.data,\n            });\n        }\n        console.log(\"login non réussi\");\n\n      });\n\n\n    } else {\n      //cas ou tous les champs ne sont pas remplis\n      this.setState({\n        error: 'Veuillez saisir tous les champs !',\n      });\n    }\n\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n        \n    e.preventDefault();\n\n   \n    \n  }\n\n  render() {\n    const { error } = this.state;\n    const {loggedIn } = this.state;\n\n    if(loggedIn){\n      //redirection vers la page d'acceuil si la connexion est réussie\n      return <Redirect to=\"/accueil\"/>;\n    }\n  \n    //affichage du formulaire de connexion a completer par l'utilisateur\n    return (\n      <div>\n        <h1 className=\"myBibli\">MyBibli</h1>\n        <MDBContainer className=\"containerConnexion\">\n          <MDBRow>\n            <MDBCard>\n              <MDBCardBody className=\"mx-4\">\n                <form onSubmit={this.handleSubmitLogIn}>\n                  <div className=\"text-center\">\n                    <h2 className=\"dark-grey-text mb-5\">\n                      Connexion\n                    </h2>\n                  </div>\n                  <label htmlFor=\"email\" className=\"grey-text\">\n                    Adresse mail\n                    <input\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                    />\n                  </label>\n\n                  <br />\n                  <label htmlFor=\"password\" className=\"grey-text\">\n                    Mot de passe\n                    <input\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                    />\n                  </label>\n\n                  <p className=\"font-small blue-text d-flex justify-content-end pb-3\">\n\n                  </p>\n                  <div className=\"text-center mb-3\">\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleSubmitLogIn}>Se connecter</button>\n                    {\n                     error && (\n                     <p className=\"error\">{error}</p>\n                     )\n                    }\n                  </div>\n                  <p className=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\" />\n                </form>\n              </MDBCardBody>\n              <MDBModalFooter className=\"mx-5 pt-3 mb-1\">\n                <p className=\"font-small grey-text d-flex justify-content-end\">\n                    \n                  <Link to=\"/inscription\" className=\"blue-text ml-1\">\n                    S&apos;inscrire\n                  </Link>\n                </p>\n\n\n              </MDBModalFooter>\n            </MDBCard>\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\nconst Erreur404 = () => (\n  /* Affiche se paragraphe d'erreur si la page n'existe pas */ \n  <p>Je suis l&apos;erreur 404</p>\n);\n\nexport default Erreur404;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport './inscription.css';\n\n\n\nimport {\n  MDBContainer, MDBRow, MDBCard, MDBCardBody,\n} from 'mdbreact';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastname: null,//va contenir la valeur entrée pour le champs \"nom\" du formulaire\n      firstname: null,//va contenir la valeur entrée pour le champs \"prenom\" du formulaire\n      password: null,//va contenir la valeur entrée pour le champs \"mot de passe\" du formulaire\n      passwordBis: null,//va contenir la valeur entrée pour le champs \"mot de passe de confirmation\" du formulaire\n      email: null,//va contenir la valeur entrée pour le champs \"adresse mail\" du formulaire\n      isSignedUp: false, //initialise le statut d'inscription comme faux\n      error: '',//va contenir l'erreur en cas d'erreur\n\n    };\n  }\n\n  //methode qui permet d'attribuer à \"lastname\", \"firstname\", \"password\", \"passwordBis\" et \"email\" les valeurs entrées au clavier par l'utilisateur\n  change = async e => {\n    await this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  //methode qui permet d'envoyer les données au fichier PHP \"inscription_back.php\" afin de verifier l'inscription de l'utilisateur, lorque celui-ci appuie sur le bouton \"valider\"\n  handleSubmitSignUp = e => {\n    const {\n      lastname, firstname, email, password, passwordBis,\n    } = this.state;\n\n    //cas ou tous les champs sont remplis\n    if (lastname && firstname && password && email && passwordBis)\n    {\n      //verification que tous les champs soient correctement remplis\n\n      if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n        this.setState({\n          error: 'Veuillez saisir une adresse mail valide !',\n        });\n      } else if (password.length < 6) {\n        this.setState({\n          error: 'Veuillez saisir un mot de passe avec au moins 6 caractères !',\n        });\n      } else if (password !== passwordBis) {\n        this.setState({\n          error: 'Le mot de passe de confirmation ne correspond pas !',\n        });\n      } \n      else\n      //si tous les champs sont correctement remplis\n      {\n        console.log(this.state);\n        let formData = new FormData();\n        formData.append(\"firstname\",this.state.firstname);\n        formData.append(\"lastname\",this.state.lastname);\n        formData.append(\"email\",this.state.email);\n        formData.append(\"password\",this.state.password);\n        const url = \"http://localhost:8888/API/inscription/inscription_back.php\";\n        axios.post(url,formData)\n\n        //succès inscription\n        .then(function(response) {  \n          this.setState({isSignedUp: true});//change le statut d'inscrption comme vrai, redirection dans le render\n          console.log(\"inscription réussie\", response);\n          alert('Formulaire validé');\n        }.bind(this))\n\n        //echec inscription\n        .catch((error) => {\n          if (error.response && error.response.status === 403){\n            this.setState({\n            error: 'L’adresse e-mail '+email+' est déjà prise.',\n            });\n          }\n          console.log(\"formulaire non valide\", error);\n        }); \n      }\n    }\n    else \n    {\n      //cas ou tous les champs ne sont pas remplis\n      this.setState({\n        error: 'Veuillez saisir tous les champs !',\n      });\n    } \n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n   \n    e.preventDefault();\n  }\n\n\n  render() {\n    const { error } = this.state;\n    const container = {height: 750};\n    const {isSignedUp} = this.state;\n\n    if (isSignedUp){\n      //redirection vers la page de connexion\n      return <Redirect to=\"/\"/>;\n    }\n\n    //affichage du formulaire d'inscription a completer par l'utilisateur\n    return (\n      <MDBContainer style={container} className=\"containerInscription\">\n        <MDBRow>\n          <div className=\"colInscription\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={this.handleSubmitSignUp} className=\"form\">\n                  <div className=\"text-center\">\n                    <h2 className=\"dark-grey-text mb-5\">\n                      Inscription\n                    </h2>\n                  </div>\n                  <div className=\"grey-text\">\n                    <label htmlFor=\"lastName\" className=\"grey-text\">\n                      Nom\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"lastname\"\n                      name=\"lastname\"\n                      placeholder=\"Nom\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"firstname\" className=\"grey-text\">\n                      Prénom\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"firstname\"\n                      name=\"firstname\"\n                      placeholder=\"Prénom\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"email\" className=\"grey-text\">\n                      Adresse mail\n                    </label>\n                    <input\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      className=\"form-control\"\n                      placeholder=\"mail@exemple.com\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n                    <label htmlFor=\"password\" className=\"grey-text\">\n                      Mot de passe\n                    </label>\n                    <input\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      onChange={this.change}\n                      className=\"form-control\"\n                      placeholder=\"Veuillez saisir un mot de passe\"\n                      required\n                    />\n\n                    <br />\n                    <label htmlFor=\"passwordBis\" className=\"grey-text\">\n                      Mot de passe de confirmation\n                    </label>\n                    <input\n                      type=\"password\"\n                      id=\"passwordBis\"\n                      className=\"form-control\"\n                      placeholder=\"Veuillez confirmer votre mot de passe\"\n                      onChange={this.change}\n                      required\n                    />\n\n\n                  </div>\n                  <div className=\"text-center py-4 mt-3\">\n                    <button className=\"btn btn-primary\" onClick={this.handleSubmitSignUp} type=\"submit\">S&apos;inscrire</button>\n                    {\n                     error && (\n                     <p className=\"error\">{error}</p>\n                     )\n                    }\n                  </div>\n\n                </form>\n\n              </MDBCardBody>\n            </MDBCard>\n          </div>\n        </MDBRow>\n      </MDBContainer>\n\n    );\n  }\n}\n\nexport default SignUp;\n","import React from \"react\";\nimport './monCompte.css';\nimport { MDBTableBody, MDBTable, MDBBtn } from \"mdbreact\";\nimport axios from 'axios';\nimport { Redirect} from 'react-router';\n\n\nclass MyAccount extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state ={\n            noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n            informations: [],//va contenir les informations de l'utilisateur\n            loading: true,//booleen initialisé comme vrai, qui va changer lors de la récupération des données\n            error:'',//va contenir l'erreur en cas d'erreur\n            firstName: undefined,//va contenir la nouvelle valeur du prenom entrée pour le champs \"prenom\"\n            lastName:undefined,//va contenir la nouvelle valeur du nom entrée pour le champs \"nom\"\n        }\n        this.checkSession = this.checkSession.bind(this);\n    }\n\n    //Vérifie que la session est active\n    checkSession () {\n        axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n        .then(function(response){\n        console.log(response);\n        })\n\n        .catch((error) => {\n        if(error.response && error.response.status=== 404){\n            this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n            console.log(error);\n        }\n        });\n    }\n\n    //methode qui permet d'attribuer à \"firstName\" la valeur entrée au clavier par l'utilisateur\n    handleChangeFirstName = (event) => {\n        this.setState({\n            firstName: event.target.value\n        })\n    }\n\n    //methode qui permet d'attribuer à \"lastName\" la valeur entrée au clavier par l'utilisateur\n    handleChangeLastName = (event) => {\n        this.setState({\n            lastName: event.target.value\n        })\n    }\n\n    //methode qui permet d'envoyer les données au fichier PHP \"modifier_firstname.php\" afin d'enregistrer la nouvelle donnée, lorque l'utilisateur appuie sur le bouton \"modifier\" a cote du prenom\n    handleSubmitFirstName = (firstName) => e => {\n        let formData = new FormData();\n        formData.append(\"firstname\",firstName);\n        const url = \"http://localhost:8888/API/MonCompte/modifier_firstname.php\"\n        axios.post(url, formData, {withCredentials: true})\n        \n        //succes modification prénom\n        .then(function(response){\n          console.log(response.status, response)\n          alert('Modification du prénom enregistrée');\n        })\n    \n        //echec modification prénom\n        .catch((error)=>{\n          console.log(error)\n          if (error.response && error.response.status === 403){\n            console.log(error);\n            alert('Echec modification');\n          }\n        });\n    \n        setTimeout(() => {\n          this.setState({\n            error: '',\n          });\n        }, 2000);\n              \n        e.preventDefault();\n      }\n\n      //methode qui permet d'envoyer les données au fichier PHP \"modifier_lastname.php\" afin d'enregistrer la nouvelle donnée, lorque l'utilisateur appuie sur le bouton \"modifier\" a cote du nom\n      handleSubmitLastName = (lastName) => e => {\n        let formData = new FormData();\n        formData.append(\"lastname\",lastName);\n        const url = \"http://localhost:8888/API/MonCompte/modifier_lastname.php\"\n        axios.post(url, formData, {withCredentials: true})\n        \n        //succes modification nom\n        .then(function(response){\n          console.log(response.status, response)\n          alert('Modification du nom enregistrée');\n        })\n    \n        //echec modification nom\n        .catch((error)=>{\n          console.log(error)\n          if (error.response && error.response.status === 403){\n            console.log(error);\n            alert('Echec modification');\n          }\n        });\n    \n        setTimeout(() => {\n          this.setState({\n            error: '',\n          });\n        }, 2000);\n              \n        e.preventDefault();\n      }\n      \n\n      //methode qui permet de récuperer les linformations de l'utilisateur via le fichier \"mon_compte.php\"     \n    async componentDidMount() {\n        const url = \"http://localhost:8888/API/MonCompte/mon_compte.php\";\n        const response = await fetch(url,{credentials: 'include'});\n        const data = await response.json();\n        this.setState({\n            informations: data.results.profile[0], //\"informations\" contient les données reçues par le back-end \n            loading: false //booleen \"loading\" changé comme \"faux\"\n        })\n        console.log(data.results.profile);\n    }\n\n    render() {\n        const { firstName, lastName, informations } = this.state;\n        const {noSession} = this.state;\n\n        //appel à la methode qui verifie la session\n        this.checkSession ();\n\n        //s'il n'y a pas de session active, redirection vers la page de connexion\n        if(noSession){\n          return <Redirect to=\"/\"/>;\n        }\n\n        //si le temps de récupération des données a afficher est long\n        if(this.state.loading){\n            return <div>chargement...</div>;\n        }\n\n        //affichage des informations de l'utilisateur\n        //affichage des champs a remplir si l'utilisateur veut modifier ses donnees\n        //affichage des boutons \"modifier\"\n        return(\n            <div>\n                <h1 className = \"titleMyAccount\">Mes informations personnelles</h1>\n                <MDBTable hover bordered maxHeight=\"350px\">\n                    <MDBTableBody>  \n                        <tr>\n                            <td>Adresse email : {informations.email}</td>\n                        </tr>\n                        <tr>\n                            <td>Prénom : \n                              <br></br>\n                                <input className=\"inputModif\" value={firstName} defaultValue={informations.firstname} onChange={e => this.handleChangeFirstName(e)}/>          \n                            <MDBBtn color=\"dark\" onClick={this.handleSubmitFirstName(this.state.firstName)}>Modifier</MDBBtn>\n                            </td>   \n                        </tr>\n                        <tr>\n                            <td>Nom : \n                              <br></br>\n                                <input className=\"inputModif\" value={lastName} defaultValue={informations.lastname} onChange={e => this.handleChangeLastName(e)}/>         \n                            <MDBBtn color=\"dark\" onClick={this.handleSubmitLastName(this.state.lastName)}>Modifier</MDBBtn></td>\n                        </tr>\n                    </MDBTableBody>\n            </MDBTable>\n            </div>\n        )\n    }   \n}\n\nexport default MyAccount;","import React, {Component} from 'react';\nimport {\n    MDBContainer,MDBCol, MDBBtn, \n  } from 'mdbreact';\nimport \"./accueil.css\";\nimport axios from 'axios';\nimport {  MDBDropdown,\n  MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem,  } from \"mdbreact\";\nimport { Redirect} from 'react-router';\nimport { Link } from 'react-router-dom';\n\n\n\nclass HomePage extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n          noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      search:'',//va contenir la valeur entrée dans la barre de recherche\n      filter: [],//va contenir les resultats de la recherche\n      error:'',//va contenir l'erreur en cas d'erreur\n        }\n        this.checkSession = this.checkSession.bind(this);\n        this.searchTitle = this.searchTitle.bind(this);\n        this.searchAuthor = this.searchAuthor.bind(this);\n        this.searchYear= this.searchYear.bind(this);\n        this.searchEdition = this.searchEdition.bind(this);\n        this.searchTypeBook = this.searchTypeBook.bind(this);\n    }\n\n    //fonction qui permet de fermer la session via le ficher PHP \"logout.php\" lorsque l'utilisateur appuie sur \"se deconnecter\"\n    handleLogOut () {\n      axios.get(\"http://localhost:8888/API/MonCompte/logout.php\", {withCredentials: true})\n    \n      //succes deconnexion\n      .then(function(response){\n        console.log(\"successful logout\", response);\n        this.setState({logOut: true});//booleen de connexion changé comme \"vrai\"\n      }.bind(this))\n    \n      //echec deconnexion\n      .catch((error) => {\n        if(error.response && error.response.status=== 403){\n          console.log(error);\n        }\n      });\n    }\n    \n\n  //Vérifie que la session est active\n    checkSession () {\n        axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n    \n        .then(function(response){\n          console.log(response);\n        })\n    \n        .catch((error) => {\n          if(error.response && error.response.status=== 404){\n            this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n            console.log(error);\n          }\n        });\n      }\n   \n      //methode qui permet d'attribuer à \"search\" la valeur entrée au clavier par l'utilisateur\n  change = e => {\n    this.setState({\n      [e.target.id]: e.target.value,\n      });\n  }  \n\n  //Recherche avec le filtre par titre\n  searchTitle = (search) => e => {\n    console.log(search);\n    let formData = new FormData();\n    formData.append(\"title\",search);\n    const url = \"http://localhost:8888/API/Accueil/recherche_titre.php\"\n    axios.post(url, formData, {withCredentials: true})\n\n    .then(response => response.data)\n    \n    .then((data) => {\n      this.setState({filter: data.results.livres});//\"filter\" contient les données reçues par le back-end \n      console.log(this.state.filter)\n    })\n      \n    \n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n  \n  //Recherche avec le filtre par auteur\n  searchAuthor = (search) => e => {\n    console.log(search);\n    let formData = new FormData();\n    formData.append(\"author\",search);\n    const url = \"http://localhost:8888/API/Accueil/recherche_author.php\"\n    axios.post(url, formData, {withCredentials: true})\n\n\n    .then(response => response.data)\n    \n    .then((data) => {\n      this.setState({filter: data.results.livres});//\"filter\" contient les données reçues par le back-end \n      console.log(this.state.filter)\n    })\n      \n    \n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n  //Recherche avec le filtre par année de sortie\n  searchYear = (search) => e => {\n    console.log(search);\n    let formData = new FormData();\n    formData.append(\"year\",search);\n    const url = \"http://localhost:8888/API/Accueil/recherche_year.php\"\n    axios.post(url, formData, {withCredentials: true})\n\n    .then(response => response.data)\n    \n    .then((data) => {\n      this.setState({filter: data.results.livres});//\"filter\" contient les données reçues par le back-end \n      console.log(this.state.filter)\n    })\n      \n    \n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n  //Recherche avec le filtre par edition\n  searchEdition = (search) => e => {\n    console.log(search);\n    let formData = new FormData();\n    formData.append(\"edition\",search);\n    const url = \"http://localhost:8888/API/Accueil/recherche_edition.php\"\n    axios.post(url, formData, {withCredentials: true})\n\n    .then(response => response.data)\n    \n    .then((data) => {\n      this.setState({filter: data.results.livres});//\"filter\" contient les données reçues par le back-end \n      console.log(this.state.filter)\n    })\n      \n    \n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n  //Recherche avec le filtre par type de livre\n  searchTypeBook = (search) => e => {\n    console.log(search);\n    let formData = new FormData();\n    formData.append(\"typeBook\",search);\n    const url = \"http://localhost:8888/API/Accueil/recherche_typeBook.php\"\n    axios.post(url, formData, {withCredentials: true})\n\n    .then(response => response.data)\n    \n    .then((data) => {\n      this.setState({filter: data.results.livres});//\"filter\" contient les données reçues par le back-end \n      console.log(this.state.filter)\n    })\n      \n    \n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n\n    render() {\n        const container = {height:270};\n        const {noSession} = this.state;\n        const bgRed = {backgroundColor: 'rgb(83, 4, 4)'}\n        const{logOut} = this.state;\n\n        //appel à la methode qui verifie la session\n        this.checkSession ();\n\n        //s'il n'y a pas de session active, redirection vers la page de connexion\n        if(noSession){\n            return <Redirect to=\"/\"/>;\n          }\n          //Redirection vers page de connexion quand l'utilisateur se deconnecte\n  if(logOut){\n    return <Redirect to=\"/\"/>;\n  };\n  \n\n\n //affichage du menu vertical qui redirige vers les differentes pages\n        //affichage de la barre de recherche\n        //affichage des filtres qui font appel aux differentes fonctions\n        return(\n            <div>\n            <h1 className=\"myBibliBis\">MyBibli</h1>\n            <div className=\"searchPosition\">\n              <MDBCol>\n                <div className=\"active-pink-3 active-pink-4 mb-4\">\n                  <input className=\"form-control\" id=\"search\" type=\"text\" placeholder=\"Indiquez votre recherche...\"  onChange={this.change}/>\n                </div>\n              </MDBCol>\n            </div>\n            <br></br>\n            <div >\n            <ul className=\"ulFilter\">\n            <li className=\"liFilter\">Puis sélectionnez un filtre :  </li>\n            <li className=\"liFilter\">\n              <MDBBtn  onClick={this.searchTitle(this.state.search)} color=\"dark\" size=\"lg\">Titre</MDBBtn>\n            </li>\n            <li className=\"liFilter\">\n              <MDBBtn  onClick={this.searchAuthor(this.state.search)} color=\"dark\" size=\"lg\">Auteur</MDBBtn>\n              </li>\n            <li className=\"liFilter\">\n              <MDBBtn  onClick={this.searchYear(this.state.search)} color=\"dark\" size=\"lg\">Année de sortie</MDBBtn>\n            </li>\n            <li className=\"liFilter\">\n              <MDBBtn  onClick={this.searchEdition(this.state.search)} color=\"dark\" size=\"lg\">Edition</MDBBtn>\n            </li>\n            <li className=\"liFilter\">\n              <MDBBtn  onClick={this.searchTypeBook(this.state.search)} color=\"dark\" size=\"lg\">Type de livre</MDBBtn>\n            </li>\n\n            </ul>\n            <ul className=\"resultsSearch\"> \n                  { this.state.filter ? this.state.filter.map(livre => (\n                      <li className=\".liResults\" key={livre.id}>{livre.title}, {livre.author}, {livre.typeBook}, sorti en {livre.year}, édition {livre.edition}, acheté le: {livre.date}, statut: {livre.status}</li>\n                  )) : <em>Chargement...</em>}\n                </ul>\n\n        </div>\n        \n        <MDBDropdown className=\"drop\">\n                <MDBDropdownToggle  style={bgRed}>\n                  <div >Contact</div>\n                </MDBDropdownToggle>\n                <MDBDropdownMenu basic>\n                  <MDBDropdownItem href=\"mailto:mybibli.sup@gmail.com\">mybibli.sup@gmail.com</MDBDropdownItem>  \n                </MDBDropdownMenu>\n              </MDBDropdown>\n\n        <MDBDropdown  className=\"dropdownn\">\n      <MDBDropdownToggle style={bgRed}>\n       Mon Compte\n      </MDBDropdownToggle>\n      <MDBDropdownMenu basic>\n        <MDBDropdownItem>\n        <Link to=\"/gererMonCompte\">\n                    Gérer mon compte\n                    </Link>\n                    </MDBDropdownItem>\n        <MDBDropdownItem onClick = {this.handleLogOut}><Link to=\"/\">\n                    Se déconnecter\n                    </Link>\n                    </MDBDropdownItem>\n      </MDBDropdownMenu>\n    </MDBDropdown>\n            \n        <MDBContainer style={container} className=\"containerAcceuil\">\n        \n          <div className=\"sidenav\">\n          <br></br>\n            <a href=\"/mesLivres\">Mes livres</a>\n            <br></br>\n            <a href=\"/ajoutlivre\">Ajouter un livre</a>\n            <br></br>\n            <a href=\"/mesPrets\">Gérer mes prêts</a>\n            <br></br>\n            <a href=\"/prochainAchat\">Mes prochains achats</a>\n          </div>      \n        </MDBContainer>\n      </div>\n      \n        );\n    }\n}\n\nexport default HomePage;","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport './ajoutLivre.css';\nimport axios from 'axios';\nimport { Redirect} from 'react-router';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n  \n\n\n\nimport {\n  MDBContainer, MDBRow, MDBCard, MDBCardBody,\n} from 'mdbreact';\n\nclass AddBook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      title: null,//va contenir la valeur entrée pour le champs \"titre\" du formulaire\n      author: null,//va contenir la valeur entrée pour le champs \"auteur\" du formulaire\n      year: null,//va contenir la valeur entrée pour le champs \"année de sortie\" du formulaire\n      date: null,//va contenir la valeur entrée pour le champs \"date d'achat\" du formulaire\n      edition: null,//va contenir la valeur entrée pour le champs \"edition\" du formulaire\n      typeBook: null,//va contenir la valeur entrée pour le champs \"type\" du formulaire\n      error: '',//va contenir l'erreur en cas d'erreur\n\n    }\n    this.checkSession = this.checkSession.bind(this);\n  }\n\n  //Vérifie que la session est active\n  checkSession () {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n    .then(function(response){\n      console.log(response);\n    })\n\n    .catch((error) => {\n      if(error.response && error.response.status=== 404){\n        this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n        console.log(error);\n      }\n    });\n  }\n\n  //methode qui permet d'attribuer à \"title\", \"author\", \"year\", \"date\", \"edition\" et \"typeBook\" les valeurs entrées au clavier par l'utilisateur\n  change = async e => {\n    await this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n//methode qui permet d'envoyer les données au fichier PHP \"ajout_livre_back.php\" afin d'enregistrer le livre, lorque l'utilisateur appuie sur le bouton \"valider\"\n  handleSubmitBook = e => {\n\n    const {\n      title, author, year, date, edition, typeBook,\n    } = this.state;\n\n    if (title && author && year && date && edition && typeBook ) {\n\n        \n        console.log(this.state);\n        let formData = new FormData();\n        formData.append(\"title\",this.state.title);\n        formData.append(\"author\",this.state.author);\n        formData.append(\"year\",this.state.year);\n        formData.append(\"date\",this.state.date);\n        formData.append(\"edition\",this.state.edition);\n        formData.append(\"typeBook\",this.state.typeBook);\n        const url = \"http://localhost:8888/API/AjouterLivre/ajout_livre_back.php\";\n        axios.post(url,formData, {withCredentials: true})\n\n        //succès ajout livre\n        .then(function(response){\n          console.log(response);\n          toast.success(' Livre ajouté à votre bibliothèque', {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n          \n          })\n        \n        //echec ajout livre\n        .catch((error) => {\n          if (error.response && error.response.status === 403){\n            console.log(error);\n            toast.warn('Attention : ce livre existe déjà dans votre bibliothèque', {\n              position: \"top-center\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              });\n            \n          }\n        }); \n\n        \n    } else {\n      //cas ou les champs ne sont pas correctement remplis\n      this.setState({\n        error: 'Veuillez saisir tous les champs !',\n      });\n    }\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n  render() {\n    const { error } = this.state;\n    const container = {height: 1000};\n    const {noSession} = this.state;\n    \n\n    //appel à la methode qui verifie la session\n    this.checkSession ();\n\n     //s'il n'y a pas de session active, redirection vers la page de connexion\n     if(noSession){\n      return <Redirect to=\"/\"/>;\n    }\n\n    return (\n      <MDBContainer style={container} className=\"containerInscription\">\n        <MDBRow>\n          <div className=\"colInscription\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={this.handleSubmitBook} className=\"form\">\n                  <div className=\"text-center\">\n                    <h2 className=\"dark-grey-text mb-5\">\n                      Ajouter un livre\n                    </h2>\n                  </div>\n                  <div className=\"grey-text\">\n                    <label htmlFor=\"title\" className=\"grey-text\">\n                      Titre\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"title\"\n                      placeholder=\"Titre\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"author\" className=\"grey-text\">\n                      Auteur\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"author\"\n                      placeholder=\"Auteur\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"year\" className=\"grey-text\">\n                      Année de sortie\n                    </label>\n                    <input\n                      type=\"number\"\n                      id=\"year\"\n                      className=\"form-control\"\n                      placeholder=\"Année\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"date\" className=\"grey-text\">\n                      Date d&apos;achat\n                    </label>\n                    <input\n                      type=\"date\"\n                      id=\"date\"\n                      placeholder=\"jj/mm/aa\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"edition\" className=\"grey-text\">\n                      Edition\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"edition\"\n                      placeholder=\"Edition\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"typeBook\" className=\"grey-text\">\n                      Type\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"typeBook\"\n                      placeholder=\"Type\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n\n                  </div>\n                  <div className=\"text-center py-4 mt-3\">\n                    <button className=\"btn btn-primary\" onClick={this.handleSubmitBook} type=\"submit\">Valider</button>\n                    <ToastContainer />\n                    {\n                     error && (\n                     <p className=\"error\">{error}</p>\n                     )\n                    }\n                  </div>\n\n                </form>\n\n              </MDBCardBody>\n            </MDBCard>\n          </div>\n        </MDBRow>\n      </MDBContainer>\n\n    );\n  }\n}\n\nexport default AddBook;","/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { Redirect} from 'react-router';\nimport './formulaireGerePret.css';\nimport {\n  MDBContainer, MDBRow, MDBCard, MDBCardBody,\n} from 'mdbreact';\nimport axios from 'axios';\n\n\nclass LendBook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      title: null,//va contenir la valeur entrée pour le champs \"titre\" du formulaire\n      author: null,//va contenir la valeur entrée pour le champs \"auteur\" du formulaire\n      borrower: null,//va contenir la valeur entrée pour le champs \"emprunteur\" du formulaire\n      borrowDate: null,//va contenir la valeur entrée pour le champs \"date d'emprunt\" du formulaire\n      registeredLend: false,//initialise le statut de redirection comme faux\n      error: '',//va contenir l'erreur en cas d'erreur\n\n    }\n    this.checkSession = this.checkSession.bind(this);\n  }\n\n  //Vérifie que la session est active\n  checkSession () {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n    .then(function(response){\n      console.log(response);\n    })\n\n    .catch((error) => {\n      if(error.response && error.response.status=== 404){\n        this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n        console.log(error);\n      }\n    });\n  }\n\n  //methode qui permet d'attribuer à \"title\", \"author\", \"borrower\" et \"borrowDate\" les valeurs entrées au clavier par l'utilisateur\n  change = async e => {\n    await this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  //methode qui permet d'envoyer les données au fichier PHP \"ajout_pret.php\" afin d'enregistrer le prêt, lorque l'utilisateur appuie sur le bouton \"valider\"\n  handleSubmitLend = e => {\n\n    const {\n      title, author, borrower, borrowDate,\n    } = this.state;\n    //cas ou tous les champs sont remplis\n    if (title && author && borrower && borrowDate) {\n\n        \n        console.log(this.state);\n        let formData = new FormData();\n        formData.append(\"title\",this.state.title);\n        formData.append(\"author\",this.state.author);\n        formData.append(\"borrower\",this.state.borrower);\n        formData.append(\"borrowDate\",this.state.borrowDate);\n        const url = \"http://localhost:8888/API/AjouterPret/ajout_pret.php\";\n        axios.post(url,formData, {withCredentials: true})\n\n        //succès enregistrer prêt\n        .then(function(response){\n          this.setState({registeredLend:true});\n          console.log(response);\n          alert('Prêt enregistré');\n        }.bind(this))\n\n        //echec enregistrer prêt \n        .catch((error) => {\n          if (error.response && error.response.status === 403){\n            console.log(error);\n            alert(error.response.data);\n          }\n        });\n\n        \n    } else {\n      //cas ou les champs ne sont pas remplis\n      this.setState({\n        error: 'Veuillez saisir tous les champs !',\n      });\n    }\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n  render() {\n    const { error } = this.state;\n    const container = {height: 800};\n    const {registeredLend} = this.state;\n    const {noSession} = this.state;\n\n    //appel à la methode qui verifie la session\n    this.checkSession ();\n\n    //s'il n'y a pas de session active, redirection vers la page de connexion\n    if(noSession){\n      return <Redirect to=\"/\"/>;\n    }\n\n    //redirection vers la page des prêts si le prêt a été enregistré correctement\n    if(registeredLend){\n      return <Redirect to=\"/mesPrets\"/>;\n    }\n\n    //affichage du formulaire de prêt a completer par l'utilisateur\n    //affichage du bouton \"valider\" en fin de formulaire\n    return (\n      <MDBContainer style={container} className=\"containerGerePret\">\n        <MDBRow>\n          <div className=\"colGerePret\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={this.handleSubmitLend} className=\"form\">\n                  <div className=\"text-center\">\n                    <h2 className=\"dark-grey-text mb-5\">\n                      Ajouter un prêt\n                    </h2>\n                  </div>\n                  <div className=\"grey-text\">\n                    <label htmlFor=\"title\" className=\"grey-text\">\n                      Titre\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"title\"\n                      placeholder=\"Titre\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"author\" className=\"grey-text\">\n                      Auteur\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"author\"\n                      placeholder=\"Auteur\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"borrower\" className=\"grey-text\">\n                      Emprunteur\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"borrower\"\n                      placeholder=\"Nom de l'emprunteur\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"borrowDate\" className=\"grey-text\">\n                      Date d&apos;emprunt\n                    </label>\n                    <input\n                      type=\"date\"\n                      id=\"borrowDate\"\n                      placeholder=\"jj/mm/aa\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n\n                  </div>\n                  <div className=\"text-center py-4 mt-3\">\n                    <button className=\"btn btn-primary\" onClick={this.handleSubmitLend} type=\"submit\">Valider</button>\n                    {\n                     error && (\n                     <p className=\"error\">{error}</p>\n                     )\n                    }\n                  </div>\n\n                </form>\n\n              </MDBCardBody>\n            </MDBCard>\n          </div>\n        </MDBRow>\n      </MDBContainer>\n\n    );\n  }\n}\nexport default LendBook;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { Redirect} from 'react-router';\nimport './formulaireAchat.css';\nimport {\n  MDBContainer, MDBRow, MDBCard, MDBCardBody,\n} from 'mdbreact';\nimport axios from 'axios';\n\nclass NextPurchase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      title: null,//va contenir la valeur entrée pour le champs \"titre\" du formulaire\n      author: null,//va contenir la valeur entrée pour le champs \"auteur\" du formulaire\n      registeredPurchase: false,//initialise le statut de redirection comme faux\n      error: '',//va contenir l'erreur en cas d'erreur\n\n    }\n    this.checkSession = this.checkSession.bind(this);\n  }\n\n  //Vérifie que la session est active\n  checkSession () {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n    .then(function(response){\n      console.log(response);\n    })\n\n    .catch((error) => {\n      if(error.response && error.response.status=== 404){\n        this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n        console.log(error);\n      }\n    });\n  }\n\n  //methode qui permet d'attribuer à \"title\" et \"author\" les valeurs entrées au clavier par l'utilisateur\n  change = async e => {\n    await this.setState({\n      [e.target.id]: e.target.value,\n    });\n  }\n\n  //methode qui permet d'envoyer les données au fichier PHP \"ajout_prochain_achat.php\" afin d'enregistrer le nouvel achat, lorque l'utilisateur appuie sur le bouton \"valider\"\n  handleSubmitPurchase = e => {\n\n    const {\n      title, author,\n    } = this.state;\n\n    //cas ou tous les champs sont remplis\n    if (title && author) {\n\n        \n        console.log(this.state);\n        let formData = new FormData();\n        formData.append(\"title\",this.state.title);\n        formData.append(\"author\",this.state.author);\n        const url = \"http://localhost:8888/API/AjouterAchat/ajout_prochain_achat.php\";\n        axios.post(url,formData, {withCredentials: true})\n\n        //succes enregistrer prochain achat\n        .then(function(response){\n          this.setState({registeredPurchase:true});\n          console.log(response);\n          alert('Livre enregistré dans vos prochains achats');\n        }.bind(this))\n\n        //echec enregistrer prochain achat\n        .catch((error) => {\n          if (error.response && error.response.status === 403){\n            console.log(error);\n            alert('Erreur: Ce livre existe déjà dans votre bibliothèque !');\n          }\n        }); \n\n        \n    } else {\n      //cas ou les champs ne sont pas remplis\n      this.setState({\n        error: 'Veuillez saisir tous les champs !',\n      });\n    }\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n  render() {\n    const { error } = this.state;\n    const container = {height: 800};\n    const {registeredPurchase} = this.state;\n    const {noSession} = this.state;\n\n    //appel à la methode qui verifie la session\n    this.checkSession ();\n\n    //s'il n'y a pas de session active, redirection vers la page de connexion\n    if(noSession){\n      return <Redirect to=\"/\"/>;\n    }\n    \n    //redirection vers la page des prochains achats si le prochain achat a été enregistré correctement\n    if(registeredPurchase){\n      return <Redirect to=\"/prochainAchat\"/>;\n    }\n\n    //affichage du formulaire de prochaina achat a completer par l'utilisateur\n    //affichage du bouton \"valider\" en fin de formulaire\n    return (\n      <MDBContainer style={container} className=\"containerAchat\">\n        <MDBRow>\n          <div className=\"colAchat\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={this.handleSubmitPurchase} className=\"form\">\n                  <div className=\"text-center\">\n                    <h2 className=\"dark-grey-text mb-5\">\n                      Ajouter un prochain achat\n                    </h2>\n                  </div>\n                  <div className=\"grey-text\">\n                    <label htmlFor=\"title\" className=\"grey-text\">\n                      Titre\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"title\"\n                      placeholder=\"Titre\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                    <br />\n\n                    <label htmlFor=\"author\" className=\"grey-text\">\n                      Auteur\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"author\"\n                      placeholder=\"Auteur\"\n                      className=\"form-control\"\n                      onChange={this.change}\n                      required\n                    />\n\n                  </div>\n                  <div className=\"text-center py-4 mt-3\">\n                    <button className=\"btn btn-primary\" onClick={this.handleSubmitPurchase} type=\"submit\">Valider</button>\n                    {\n                     error && (\n                     <p className=\"error\">{error}</p>\n                     )\n                    }\n                  </div>\n\n                </form>\n\n              </MDBCardBody>\n            </MDBCard>\n          </div>\n        </MDBRow>\n      </MDBContainer>\n\n    );\n  }\n}\n\nexport default NextPurchase;\n","import React, { Fragment } from \"react\";\nimport { MDBBtn, MDBTableBody, MDBTableHead, MDBTable, MDBModal, MDBModalHeader, MDBModalBody, MDBModalFooter} from \"mdbreact\";\nimport './mesPrets.css';\nimport axios from 'axios';\nimport { Redirect} from 'react-router';\n\nclass MyLends extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      loading: true,//booleen initialisé comme vrai, qui va changer lors de la récupération des données\n      lends: [],//va contenir les prets en cours de l'utilisateur\n      returnDate: '',//va contenir la valeur entrée pour le champs \"date de rendu\" du formulaire, lorsuque l'utilisateur appuie sur le bouton \"rendu\"\n      modal: false,//booleen qui va permettre d'ouvrir/fermer une fenetre lorsque l'utilisateur appuie sur \"rendu\"\n      id: '',//va contenir l'id du livre selectionné par l'utilisateur lorsqu'il appuiera sur le  bouton \"rendu\"\n      error:'',//va contenir l'erreur en cas d'erreur\n      idLend: null,//va contenir l'id du livre rendu\n    }\n    this.checkSession = this.checkSession.bind(this);\n    this.returnBook = this.returnBook.bind(this);\n    this.openModalLend = this.openModalLend.bind(this);\n  }\n\n  //Vérifie que la session est active\n  checkSession () {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n    .then(function(response){\n      console.log(response);\n    })\n\n    .catch((error) => {\n      if(error.response && error.response.status=== 404){\n        this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n        console.log(error);\n      }\n    });\n  }\n\n  //methode qui permet d'ouvrir une fenetre avec un champs pour remplir la date de rendu du livre prêté\n  openModalLend = (id) => e => {\n    this.setState({\n      modal: true,\n      idLend: id\n    });\n  }\n\n  //methode qui permet de fermer la fenetre de rendu d'un livre\n  closeModalLend = () => {\n  this.setState({\n    modal: false,\n  });\n}\n\n\n//methode qui permet d'attribuer à \"returnDate\" la valeur entrée au clavier par l'utilisateur lors du rendu d'un prêt\nchange = e => {\n  this.setState ({\n    [e.target.name]: e.target.value\n  });\n};\n\n//methode qui permet d'envoyer les données au fichier PHP \"rendu_pret.php\" afin de modifier le statut du livre prêté, lorque l'utilisateur appuie sur le bouton \"enregistrer\" de la fenetre de rendu\nreturnBook = (returnDate) => e => {\n\n  const { idLend, lends } = this.state;\n  let newBooks = lends;\n  console.log(idLend,'idBookSubmit');\n  this.setState({\n    modal: false,\n  })\n  let formData = new FormData();\n  formData.append(\"id\",idLend);\n  formData.append(\"returnDate\",returnDate);\n  const url = \"http://localhost:8888/API/GererPrets/rendu_pret.php\"\n  axios.post(url, formData, {withCredentials: true})\n  \n  //succes rendu livre\n  .then(function(response){\n    console.log(response);\n    const tmp = lends;\n    newBooks = tmp.filter(livre => livre.id !== idLend);\n    alert('Succès : Livre à nouveau marqué comme disponible');\n  })\n\n  //echec rendu livre\n  .catch((error)=>{\n    console.log(error)\n    if (error.response && error.response.status === 403){\n      console.log(error);\n      alert('Echec du rendu');\n    }\n  });\n\n  setTimeout(() => {\n    this.setState({\n      lends: newBooks\n    })\n  }, 500);\n  \n\n  setTimeout(() => {\n    this.setState({\n      error: '',\n    });\n  }, 2000);\n        \n  e.preventDefault();\n\n}\n\n//methode qui permet de récuperer les livres en cours de prêts de l'utilisateur via le fichier \"liste_prets.php\"     \nasync componentDidMount() {\n    const url = \"http://localhost:8888/API/GererPrets/liste_prets.php\";\n    const response = await fetch(url,{credentials: 'include'});\n    const data = await response.json();\n    this.setState({lends: data.results.livres, loading: false})//\"lends\" contient les données reçues par le back-end \n    console.log(data.results.livres);\n}\n\nrender() {\n  const {noSession} = this.state;\n\n  //appel à la methode qui verifie la session\n  this.checkSession ();\n\n  //s'il n'y a pas de session active, redirection vers la page de connexion\n  if(noSession){\n    return <Redirect to=\"/\"/>;\n  }\n\n    //si le temps de récupération des données a afficher est long\n    if(this.state.loading){\n        return <div>chargement...</div>;\n    }\n\n    //si l'utilisateur n'a pas de prêts en cours:\n    //affichage d'un bouton \"nouveau prêt\" qui redirige vers le formulaire de prêt\n    //affichage d'un bouton \"historique des prêts\" qui redirige vers l'historique des prêts\n    if (this.state.lends.length === 0){\n        return (\n          <div>\n            <h1 className=\"titleMyLends\"> Mes prêts </h1>\n            <div className=\"noLend\">\n              Vous n'avez actuellement aucun prêt en cours.\n            </div>\n            <div className=\"buttonGere\">\n                <Fragment>\n                    <MDBBtn href=\"/formulaireGerePret\" color=\"dark\"> \n                        Nouveau prêt\n                    </MDBBtn>\n                </Fragment>\n            </div>\n            <div className=\"buttonHistoric\">\n                <Fragment>\n                    <MDBBtn href=\"/historique\" color=\"dark\"> \n                        Historique des prêts\n                    </MDBBtn>\n                </Fragment>\n                \n          </div>  \n          </div>  \n        );\n    } \n\n    //sinon:\n    //affichage d'un tableau avec les prêts en cours de l'utilisateur, grâce a la fonction map qui va parcourir \"lends\"\n    //affichage d'un bouton \"rendu\" sur chaque ligne du tableau\n    //affichage d'un bouton \"nouveau prêt\" qui redirige vers le formulaire de prêt\n    //affichage d'un bouton \"historique des prêts\" qui redirige vers l'historique des prêts\n    //ouverture d'une fenetre avec le formulaire de rendu lorsque l'utilisateur appuie sur \"rendu\"\n    return (\n        <div>\n          <h1 className=\"titleMyLends\"> Mes prêts </h1>\n          <br></br>\n          <h2> Vous avez {this.state.lends.length} prêt(s) en cours:</h2>\n          <br></br>\n          <MDBTable hover bordered scrollY maxHeight=\"350px\">\n            <MDBTableHead>\n              <tr>\n              <th>Titre</th>\n              <th>Auteur</th>\n              <th>Emprunteur</th>\n              <th>Date d'emprunt</th>\n              <th></th>\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n              {\n                this.state.lends.map(livre => (\n                  <tr key={livre.id} >\n                    <td>{livre.title}</td>\n                    <td>{livre.author}</td>\n                    <td>{livre.borrower}</td>\n                    <td>{livre.borrowDate}</td>\n                    <td><MDBBtn onClick={this.openModalLend(livre.id)} color=\"dark\">Rendu</MDBBtn>\n                        <MDBModal isOpen={this.state.modal}>\n                          <MDBModalHeader>Date de rendu</MDBModalHeader>\n                          <MDBModalBody>\n                            <input\n                              type=\"date\"\n                              name=\"returnDate\"\n                              placeholder=\"jj/mm/aa\"\n                              className=\"form-control\"\n                              onChange={e => this.change(e)}\n                            />\n                          </MDBModalBody>\n                          <MDBModalFooter>\n                            <MDBBtn color=\"danger\" onClick={this.closeModalLend}>Annuler</MDBBtn>\n                            <MDBBtn color=\"dark\" onClick={this.returnBook(this.state.returnDate)}>Enregistrer</MDBBtn>\n                          </MDBModalFooter>\n                        </MDBModal>\n                    \n                    \n                    </td>\n                  </tr>\n                ))\n              }\n            </MDBTableBody>\n          </MDBTable>\n          <div className=\"buttonGere\">\n                <Fragment>\n                    <MDBBtn href=\"/formulaireGerePret\" color=\"dark\"> \n                        Nouveau prêt\n                    </MDBBtn>\n                </Fragment>\n                \n          </div>\n          <div className=\"buttonHistoric\">\n                <Fragment>\n                    <MDBBtn href=\"/historique\" color=\"dark\"> \n                        Historique des prêts\n                    </MDBBtn>\n                </Fragment>\n                \n          </div>  \n        </div>\n      );\n    }\n}\n\nexport default MyLends;","import React from 'react';\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBBtn, MDBModal, MDBModalHeader, MDBModalBody,MDBModalFooter, } from 'mdbreact';\nimport './mesLivres.css';\nimport axios from 'axios';\nimport { Redirect} from 'react-router';\n\nclass MyBooks extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      loading: true,//booleen initialisé comme vrai, qui va changer lors de la récupération des données\n      books: [],//va contenir les livres de l'utilisateur\n      modal: false,//booleen qui va permettre d'ouvrir/fermer une fenetre lorsque l'utilisateur appuie sur \"modifier\"\n      title: '',//va contenir la valeur entrée pour le champs \"titre\" du formulaire de modification\n      author: '',//va contenir la valeur entrée pour le champs \"auteur\" du formulaire de modification\n      year: '',//va contenir la valeur entrée pour le champs \"année de sortie\" du formulaire de modification\n      date: '',//va contenir la valeur entrée pour le champs \"date d'achat\" du formulaire de modification\n      edition: '',//va contenir la valeur entrée pour le champs \"edition\" du formulaire de modification\n      typeBook: '',//va contenir la valeur entrée pour le champs \"type\" du formulaire de modification\n      id: '',//va contenir l'id du livre selectionné par l'utilisateur lorsqu'il appuiera sur les boutons \"modifier\"/\"supprimer\"\n      error: '',//va contenir l'erreur en cas d'erreur\n      idBook: null,//va contenir l'id du livre a modifier\n    }\n    this.checkSession = this.checkSession.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.editBook = this.editBook.bind(this);\n    this.openModalBook = this.openModalBook.bind(this);\n  }\n\n  //Vérifie que la session est active\n  checkSession () {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n    .then(function(response){\n      console.log(response);\n    })\n\n    .catch((error) => {\n      if(error.response && error.response.status=== 404){\n        this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n        console.log(error);\n      }\n    });\n  }\n\n  //methode qui permet d'ouvrir une fenetre contenant un formulaire pré-rempli des informations du livre selectionné par l'utilisateur, lorsque celui-ci appuie sur \"modifier\"\n  openModalBook = (id, title, author, year, date, edition, typeBook) => e => {\n    this.setState({\n      modal: true,\n      idBook: id,\n      title: title,\n      author: author,\n      year: year,\n      date: date,\n      edition: edition,\n      typeBook: typeBook\n    });\n  }\n\n  //methode qui permet de fermer la fenetre de modification, lorsque l'utilisateur appuie sur \"annuler\"\n  closeModalBook = () => {\n  this.setState({\n    modal: false,\n    });\n  }\n\n  //methode qui permet d'attribuer à \"title\", \"author\", \"year\", \"date\", \"edition\" et \"typeBook\" les nouvelles valeurs entrées au clavier par l'utilisateur lors de la modification d'un livre\n  change = e => {\n    this.setState ({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //methode qui permet d'envoyer les données au fichier PHP \"modif_livre.php\" afin d'enregistrer les nouvelles donnees d'un livre, lorque l'utilisateur appuie sur le bouton \"enregistrer\" de la fenetre de modification\n  editBook = (title, author, year, date, edition, typeBook) => e => {\n    const { idBook, books } = this.state;\n    let newBooks = books;\n    console.log(idBook,'idBookSubmit');\n    this.setState({\n      modal: false,\n    })\n    let formData = new FormData();\n    formData.append(\"id\",idBook);\n    formData.append(\"title\",title);\n    formData.append(\"author\",author);\n    formData.append(\"year\",year);\n    formData.append(\"date\",date);\n    formData.append(\"edition\",edition);\n    formData.append(\"typeBook\",typeBook);\n    const url = \"http://localhost:8888/API/MesLivres/modif_livre.php\"\n    axios.post(url, formData, {withCredentials: true})\n    \n    //succes modification livre\n    .then(function(response){\n      console.log(response.status, response)\n      alert('Modifications enregistrées, veuillez recharger la page');\n      const tmp = books;\n      newBooks = tmp.filter(livre => livre.id !== idBook);\n    })\n\n    //echec modification livre\n    .catch((error)=>{\n      console.log(error)\n      if (error.response && error.response.status === 403){\n        console.log(error);\n        alert('Echec modification');\n      }\n    });\n    \n    setTimeout(() => {\n      this.setState({\n        books: newBooks\n      })\n    }, 500);\n\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n  //methode qui permet d'envoyer au fichier PHP \"supprimer_livre.php\" l'id du livre a supprimer, lorsque l'utilisateur appuie sur le bouton \"supprimer\"\n  handleDelete = (id) => e => {\n    const { books } = this.state;\n    let newBooks = books;\n    let formData = new FormData();\n    formData.append(\"id\",id);\n    const url = \"http://localhost:8888/API/MesLivres/supprimer_livre.php\"\n    axios.post(url, formData, {withCredentials: true})\n    \n    //succes suppression livre\n    .then(function(response){\n      console.log(response);\n      const tmp = books;\n      newBooks = tmp.filter(livre => livre.id !== id);\n      alert('Livre supprimé de votre bibliothèque');\n    })\n\n    //echec suppression livre\n    .catch((error)=>{\n      console.log(error)\n      if (error.response.status === 403){\n        console.log(error);\n        alert('Echec de la suppression');\n      }\n    });\n\n    setTimeout(() => {\n      this.setState({\n        books: newBooks\n      })\n    }, 500);\n    \n\n    setTimeout(() => {\n      this.setState({\n        error: '',\n      });\n    }, 2000);\n          \n    e.preventDefault();\n  }\n\n\n  //methode qui permet de récuperer les livres de l'utilisateur via le fichier \"liste_livres.php\"\n  async componentDidMount() {\n    const url = \"http://localhost:8888/API/MesLivres/liste_livres.php\";\n\n    const response = await fetch(url,{credentials: 'include'});\n    const data = await response.json();\n    this.setState({books: data.results.livres, loading: false})//\"books\" contient les données reçues par le back-end et booleen \"loading\" changé comme \"faux\"\n    console.log(data.results.livres);\n  }\n\n\n  \n  render() {\n    const {noSession} = this.state;\n\n     //appel à la methode qui verifie la session\n     this.checkSession ();\n\n     //s'il n'y a pas de session active, redirection vers la page de connexion\n     if(noSession){\n       return <Redirect to=\"/\"/>;\n     }\n\n    //si le temps de récupération des données a afficher est long\n    if(this.state.loading){\n      return <div>chargement...</div>;\n    }\n\n    //si l'utilisateur n'a pas de livres deja ajoutés a sa bibliotheque\n    if (this.state.books.length === 0){\n      return (\n        <div>\n          <h1 className=\"myBibli\"> Mes livres </h1>\n          <div className=\"noBook\">\n            Vous n'avez actuellement aucun livre dans votre bibliothèque.\n          </div>\n        </div>\n      );\n    }\n\n    //sinon:\n    //affichage d'un tableau avec les livres de l'utilisateur, grâce a la fonction map qui va parcourir \"books\"\n    //affichage des boutons \"supprimer\" et \"modifier\" sur chaque ligne du tableau\n    //ouverture d'une fenetre avec le formulaire de modification \n    return (\n      <div>\n        <h1 className=\"myBibli\"> Mes livres </h1>\n        <br></br>\n        <h2> Vous avez {this.state.books.length} livre(s) dans votre bibliothèque:</h2>\n        <br></br>\n        <MDBTable hover bordered scrollY maxHeight=\"400px\">\n          <MDBTableHead>\n            <tr>\n            <th>Titre</th>\n            <th>Auteur</th>\n            <th>Année de sortie</th>\n            <th>Date d'achat</th>\n            <th>Edition</th>\n            <th>Type</th>\n            <th>Statut</th>\n            <th></th>\n            <th></th>\n            </tr>\n          </MDBTableHead>\n          <MDBTableBody>\n            {\n              this.state.books.map(livre => (\n                <tr key={livre.id} >\n                  <td>{livre.title}</td>\n                  <td>{livre.author}</td>\n                  <td>{livre.year}</td>\n                  <td>{livre.date}</td>\n                  <td>{livre.edition}</td>\n                  <td>{livre.typeBook}</td>\n                  <td>{livre.status}</td>\n                  <td><MDBBtn onClick={this.openModalBook(livre.id, livre.title, livre.author, livre.year, livre.date, livre.edition, livre.typeBook)} color=\"dark\">Modifier</MDBBtn>\n                    <MDBModal isOpen={this.state.modal}>\n                      <MDBModalHeader>Modifications du livre</MDBModalHeader>\n                      <MDBModalBody>\n                      <label htmlFor=\"title\" className=\"grey-text\">\n                            Titre\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"title\"\n                            value={this.state.title}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n\n                            />\n\n                            <br/>\n\n                            <label htmlFor=\"author\" className=\"grey-text\">\n                            Auteur\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"author\"\n                            value={this.state.author}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n\n                            />\n\n                            <br/>\n\n\n                      <label htmlFor=\"year\" className=\"grey-text\">\n                            Année de sortie\n                          </label>\n                          <input\n                            type=\"number\"\n                            name=\"year\" \n                            className=\"form-control\"\n                            value={this.state.year}\n                            onChange={e => this.change(e)}\n                            \n                          />\n\n                          <br />\n\n                          <label htmlFor=\"date\" className=\"grey-text\">\n                            Date d&apos;achat\n                          </label>\n                          <input\n                            type=\"date\"\n                            name=\"date\"\n                            value={this.state.date}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n                            \n                          />\n\n                          <br />\n\n                          <label htmlFor=\"edition\" className=\"grey-text\">\n                            Edition\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"edition\"\n                            value={this.state.edition}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n                            \n                          />\n\n                          <br />\n\n                          <label htmlFor=\"typeBook\" className=\"grey-text\">\n                            Type\n                          </label>\n                          <input\n                            type=\"text\"\n                            name=\"typeBook\"\n                            value={this.state.typeBook}\n                            className=\"form-control\"\n                            onChange={e => this.change(e)}\n                            \n                          />\n                      </MDBModalBody>\n                      <MDBModalFooter>\n                        <MDBBtn color=\"danger\" onClick={this.closeModalBook}>Annuler</MDBBtn>\n                        <MDBBtn onClick={this.editBook(this.state.title, this.state.author, this.state.year, this.state.date, this.state.edition, this.state.typeBook)} color=\"dark\">Enregistrer</MDBBtn>\n                      </MDBModalFooter>\n                    </MDBModal>\n                  \n                  </td>\n                  <td><MDBBtn onClick={this.handleDelete(livre.id)} color=\"danger\">Supprimer</MDBBtn></td>\n                </tr>\n              ))\n            }\n          </MDBTableBody>\n        </MDBTable>\n\n      </div>\n    );\n  }\n}\n\nexport default MyBooks;","import React, { Fragment } from \"react\";\nimport { MDBBtn, MDBTableBody, MDBTableHead, MDBTable, MDBModal, MDBModalHeader, MDBModalBody,MDBModalFooter,} from \"mdbreact\";\nimport './mesProchainsAchats.css';\nimport axios from 'axios';\nimport { Redirect} from 'react-router';\n\n\nclass NextPurchasePage extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n      loading: true,//booleen initialisé comme vrai, qui va changer lors de la récupération des données\n      purchases: [],//va contenir les prochains achats de l'utilisateur\n      year: '',//va contenir la valeur entrée pour le champs \"année de sortie\" du formulaire de validation d'achat\n      date: '',//va contenir la valeur entrée pour le champs \"date d'achat\" du formulaire de validation d'achat\n      edition: '',//va contenir la valeur entrée pour le champs \"edition\" du formulaire de validation d'achat\n      typeBook: '',//va contenir la valeur entrée pour le champs \"type\" du formulaire de validation d'achat\n      modal: false,//booleen qui va permettre d'ouvrir/fermer une fenetre lorsque l'utilisateur appuie sur \"acheté\"\n      id: '',//va contenir l'id du livre selectionné par l'utilisateur lorsqu'il appuiera sur les boutons \"acheté/supprimer\"\n      error: '',//va contenir l'erreur en cas d'erreur\n      idPurchase: null,//va contenir l'id du livre acheté\n    }\n    this.checkSession = this.checkSession.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.buyBook = this.buyBook.bind(this);\n    this.openModalBuy = this.openModalBuy.bind(this);\n  }\n\n  //Vérifie que la session est active\n  checkSession () {\n    axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n    .then(function(response){\n      console.log(response);\n    })\n\n    .catch((error) => {\n      if(error.response && error.response.status=== 404){\n        this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n        console.log(error);\n      }\n    });\n  }\n\n  //methode qui permet d'ouvrir une fenetre contenant un formulaire a completer par l'utilisateur, lorsque celui-ci appuie sur \"acheté\"\n  openModalBuy = (id) => e => {\n    this.setState({\n      modal: true,\n      idPurchase: id\n    });\n  }\n\n  //methode qui permet de fermer la fenetre d'achat, lorsque l'utilisateur appuie sur \"annuler\"\n  closeModalBuy = () => {\n  this.setState({\n    modal: false,\n    });\n  }\n\n  //methode qui permet d'attribuer à \"year\", \"date\", \"edition\" et \"typeBook\" les nouvelles valeurs entrées au clavier par l'utilisateur lors de l'achat d'un livre\n  change = e => {\n    this.setState ({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //methode qui permet d'envoyer les données au fichier PHP \"transfert_prochain_achat.php\" afin d'enregistrer les donnees d'un livre, lorque l'utilisateur appuie sur le bouton \"enregistrer\" de la fenetre d'achat\n  buyBook = (year, date, edition, typeBook) => e => {\n    const { idPurchase, purchases } = this.state;\n    let newBooks = purchases;\n    console.log(idPurchase,'idPurchaseSubmit');\n    this.setState({\n      modal: false,\n    })\n    let formData = new FormData();\n    formData.append(\"id\",idPurchase);\n    formData.append(\"year\",year);\n    formData.append(\"date\",date);\n    formData.append(\"edition\",edition);\n    formData.append(\"typeBook\",typeBook);\n    const url = \"http://localhost:8888/API/MesProchainsAchats/transfert_prochain_achat.php\"\n    axios.post(url, formData, {withCredentials: true})\n    \n    //succes achat livre\n    .then(function(response){\n      console.log(response.status, response)\n      alert('Livre transféré dans votre bibliothèque');\n      const tmp = purchases;\n      newBooks = tmp.filter(livre => livre.id !== idPurchase);\n    })\n\n  //echec achat livre\n  .catch((error)=>{\n    console.log(error)\n    if (error.response && error.response.status === 403){\n      console.log(error);\n      alert(error.response.data);\n    }\n  });\n\n  setTimeout(() => {\n    this.setState({\n      purchases: newBooks\n    })\n  }, 500);\n  \n  setTimeout(() => {\n    this.setState({\n      error: '',\n    });\n  }, 2000);\n        \n  e.preventDefault();\n}\n\n//methode qui permet d'envoyer au fichier PHP \"supprimer_livre.php\" l'id du livre a supprimer, lorsque l'utilisateur appuie sur le bouton \"supprimer\"\nhandleDelete = (id) => e => {\n  const { purchases } = this.state;\n  let newBooks = purchases;\n  let formData = new FormData();\n  formData.append(\"id\",id);\n  const url = \"http://localhost:8888/API/MesLivres/supprimer_livre.php\"\n  axios.post(url, formData, {withCredentials: true})\n  \n  .then(function(response){\n    const tmp = purchases;\n    newBooks = tmp.filter(livre => livre.id !== id);\n    alert('Livre supprimé de vos prochains achats');\n  })\n\n  .catch((error)=>{\n    console.log(error)\n    if (error.response.status === 403){\n      console.log(error);\n      alert('Echec de la suppression');\n    }\n  });\n\n  setTimeout(() => {\n    this.setState({\n      purchases: newBooks\n    })\n  }, 500);\n  \n\n  setTimeout(() => {\n    this.setState({\n      error: '',\n    });\n  }, 2000);\n        \n  e.preventDefault();\n}\n\n\n//methode qui permet de récuperer les prochains achats de l'utilisateur via le fichier \"liste_achat.php\"\nasync componentDidMount() {\n    const url = \"http://localhost:8888/API/MesProchainsAchats/liste_achat.php\";\n    const response = await fetch(url,{credentials: 'include'});\n    const data = await response.json();\n    this.setState({purchases: data.results.livres, loading: false})//\"purchases\" contient les données reçues par le back-end \n    console.log(data.results.livres);\n  }\n\nrender() {\n    const {noSession} = this.state;\n      \n    //appel à la methode qui verifie la session\n    this.checkSession ();\n\n    //s'il n'y a pas de session active, redirection vers la page de connexion\n    if(noSession){\n      return <Redirect to=\"/\"/>;\n    }\n\n    //si le temps de récupération des données a afficher est long\n    if(this.state.loading){\n        return <div>chargement...</div>;\n    }\n\n    //si l'utilisateur n'a pas de prochains achats prevus\n    //affichage du bouton qui redirige vers le formulaire de prochain achat\n    if (this.state.purchases.length === 0){\n        return (\n          <div>\n            <h1 className=\"titleMyPurchases\"> Mes prochains achats </h1>\n            <div className=\"noPurchase\">\n              Vous n'avez actuellement aucun achat prévu.\n            </div>\n            <div className=\"buttonAchat\">\n                <Fragment>\n                    <MDBBtn href=\"/formulaireProchainAchat\" color=\"dark\"> \n                      Ajouter un prochain achat\n                    </MDBBtn>\n                </Fragment>\n            </div>\n          </div>  \n        );\n    } \n\n  //sinon:\n  //affichage d'un tableau avec les prochains achats de l'utilisateur, grâce a la fonction map qui va parcourir \"purchases\"\n  //affichage des boutons \"supprimer\" et \"acheté\" sur chaque ligne du tableau\n  //ouverture d'une fenetre avec le formulaire d'achat\n  //affichage du bouton qui redirige vers le formulaire de prochain achat\n    return (\n        <div>\n          <h1 className=\"titleMyPurchases\"> Mes prochains achats </h1>\n          <h2> Vous avez {this.state.purchases.length} prochain(s) achat(s) programmé(s):</h2>\n          <br></br>\n          <MDBTable hover bordered scrollY maxHeight=\"350px\">\n            <MDBTableHead>\n              <tr>\n              <th>Titre</th>\n              <th>Auteur</th>\n              <th></th>\n              <th></th>\n              </tr>\n            </MDBTableHead>\n            <MDBTableBody>\n              {\n                this.state.purchases.map(livre => (\n                  <tr key={livre.id} onChange={this.Change}>\n                    <td>{livre.title}</td>\n                    <td>{livre.author}</td>\n                    <td>\n                      <MDBBtn onClick={this.openModalBuy(livre.id)} color=\"dark\">Acheté</MDBBtn>\n                      <MDBModal isOpen={this.state.modal}>\n                        <MDBModalHeader>Informations complèmentaires</MDBModalHeader>\n                        <MDBModalBody>\n                            <label htmlFor=\"year\" className=\"grey-text\">\n                          Année de sortie\n                        </label>\n                        <input\n                          type=\"number\"\n                          name=\"year\"\n                          value={this.state.year}\n                          className=\"form-control\"\n                          placeholder=\"Année\"\n                          onChange={e => this.change(e)}\n                          \n                        />\n\n                        <br />\n                        <label htmlFor=\"date\" className=\"grey-text\">\n                          Date d&apos;achat\n                        </label>\n                        <input\n                          type=\"date\"\n                          name=\"date\"\n                          value={this.state.date}\n                          placeholder=\"jj/mm/aa\"\n                          className=\"form-control\"\n                          onChange={e => this.change(e)}\n                          \n                        />\n\n                        <br />\n\n                        <label htmlFor=\"edition\" className=\"grey-text\">\n                          Edition\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"edition\"\n                          value={this.state.edition}\n                          placeholder=\"Edition\"\n                          className=\"form-control\"\n                          onChange={e => this.change(e)}\n                          \n                        />\n\n                        <br />\n\n                        <label htmlFor=\"typeBook\" className=\"grey-text\">\n                          Type\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"typeBook\"\n                          value={this.state.typeBook}\n                          placeholder=\"Type\"\n                          className=\"form-control\"\n                          onChange={e => this.change(e)}\n                          \n                        />\n                        </MDBModalBody>\n                        <MDBModalFooter>\n                          <MDBBtn color=\"danger\" onClick={this.closeModalBuy}>Annuler</MDBBtn>\n                          <MDBBtn onClick={this.buyBook(this.state.year, this.state.date, this.state.edition, this.state.typeBook)} color=\"dark\">Valider l'achat</MDBBtn>\n                        </MDBModalFooter>\n                      </MDBModal>\n                    </td>\n                    <td><MDBBtn onClick={this.handleDelete(livre.id)} color=\"danger\">Supprimer</MDBBtn></td>\n                  </tr>\n                ))\n              }\n            </MDBTableBody>\n          </MDBTable>\n          <div className=\"buttonAchat\">\n                <Fragment>\n                    <MDBBtn href=\"/formulaireProchainAchat\" color=\"dark\"> \n                      Ajouter un prochain achat\n                    </MDBBtn>\n                </Fragment>\n            </div>\n        </div>\n      );\n    }\n}\n\nexport default NextPurchasePage;","import React, {Component} from 'react';\nimport \"./historique.css\";\nimport { MDBTableBody, MDBTableHead, MDBTable } from \"mdbreact\";\nimport axios from 'axios';\nimport { Redirect} from 'react-router';\n\nclass Historic extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            noSession: false,//booleen qui permet de verifier si la session de l'utilisateur est active, initialisé a \"faux\"\n            loading: true,//booleen initialisé comme vrai, qui va changer lors de la récupération des données\n            historic: [],//va contenir les anciens prêts\n            error: '',//va contenir l'erreur en cas d'erreur\n        }\n        this.checkSession = this.checkSession.bind(this);\n    }\n\n    //Vérifie que la session est active\n    checkSession () {\n        axios.get(\"http://localhost:8888/API/Session/session.php\", {withCredentials: true})\n\n        .then(function(response){\n        console.log(response);\n        })\n\n        .catch((error) => {\n            if(error.response && error.response.status=== 404){\n                this.setState({noSession: true});//s'il n'y a pas de session active, change la valeur du booleen comme \"vrai\"\n                console.log(error);\n            }\n        });\n    }\n\n    //methode qui permet de récupérer les anciens prêts effectués via le fichier \"liste_historique.php\"\n    async componentDidMount() {\n        const url = \"http://localhost:8888/API/MesLivres/liste_historique.php\";\n        const response = await fetch(url,{credentials: 'include'});\n        const data = await response.json();\n        this.setState({historic: data.results.livres, loading: false})//\"historic\" contient les données reçues par le back-end\n        console.log(data.results.livres);\n      }\n\n\n    render() {\n\n        const {noSession} = this.state;\n\n         //appel à la methode qui verifie la session\n         this.checkSession ();\n\n         //s'il n'y a pas de session active, redirection vers la page de connexion\n         if(noSession){\n           return <Redirect to=\"/\"/>;\n         }\n\n        //si le temps de récupération des données a afficher est long\n        if(this.state.loading){\n            return <div>chargement...</div>;\n        }\n\n        //s'il n'y a pas de prêt déjà enregistré dans la base de données\n        if (this.state.historic.length === 0){\n            return (\n              <div>\n                <h1 className=\"titleMyHistoric\"> Mon historique des prêts </h1>\n                <div className=\"noHistoric\">\n                  Aucun prêt effectué.\n                </div>\n              </div>  \n            );\n        } \n\n        //affichage d'un tableau avec les prêts déja effectués, grâce a la fonction map qui va parcourir \"historic\"\n        return(\n            <div> \n\n                <h1 className=\"titleMyHistoric\"> Mon historique des prêts </h1>\n\n                <br></br>\n\n                <MDBTable hover bordered scrollY maxHeight=\"400px\">\n                    <MDBTableHead>\n                    <tr>\n                    <th>Titre</th>\n                    <th>Auteur</th>\n                    <th>Emprunteur</th>\n                    <th>Date d'emprunt</th>\n                    <th>Date de rendu</th>\n                    </tr>\n                    </MDBTableHead>\n                    <MDBTableBody>\n                    {\n                        this.state.historic.map(livre => (\n                        <tr key={livre.id} >\n                            <td>{livre.title}</td>\n                            <td>{livre.author}</td>\n                            <td>{livre.borrower}</td>\n                            <td>{livre.date1}</td>\n                            <td>{livre.date2}</td>\n                        </tr>\n                        ))\n                    }\n                    </MDBTableBody>\n                </MDBTable>\n\n            </div>\n        );\n    }\n}\n        \n export default Historic;\n        ","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport App from './container/App/App';\nimport Login from './components/Connexion/connexion';\nimport Erreur404 from './components/Erreur404/erreur404';\nimport SignUp from './components/Inscription/inscription';\nimport MyAccount from './components/MonCompte/monCompte';\nimport HomePage from './components/Accueil/accueil';\nimport AddBook from './components/AjoutLivre/ajoutLivre';\nimport LendBook from './components/GerePret/formulaireGerePret';\nimport NextPurchase from './components/ProchainAchat/formulaireAchat';\nimport MyLends from './components/MesPrets/mesPrets';\nimport MyBooks from './components/MesLivres/mesLivres';\nimport NextPurchasePage from './components/MesProchainsAchats/mesProchainsAchats';\nimport Historic from './components/Historique/historique';\n\n/* permet la redirection entre les pages*/\nconst AppRoutes = (props) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <App {...props}>\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/inscription\" component={SignUp} />\n      <Route exact path=\"/accueil\" component={HomePage} />\n      <Route exact path=\"/ajoutLivre\" component={AddBook} />\n      <Route exact path=\"/formulaireGerePret\" component={LendBook} />\n      <Route exact path=\"/formulaireProchainAchat\" component={NextPurchase} />\n      <Route exact path=\"/mesPrets\" component={MyLends} />\n      <Route exact path=\"/mesLivres\" component={MyBooks} />\n      <Route exact path=\"/gererMonCompte\" component={MyAccount} />\n      <Route exact path=\"/prochainAchat\" component={NextPurchasePage} />\n      <Route exact path=\"/historique\" component={Historic} />\n     <Route component={Erreur404} />\n      </Switch>\n  </App>\n);\n\nexport default AppRoutes;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRoutes from './routes';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route component={AppRoutes} />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}